//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Powell.Mfg.LibraryWinService.LibraryServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryRequest", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class LibraryRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARENTPARTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VARIANTFLAGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.WorkCenter> WORKCENTERSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIALCODE {
            get {
                return this.MATERIALCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALCODEField, value) != true)) {
                    this.MATERIALCODEField = value;
                    this.RaisePropertyChanged("MATERIALCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENTPART {
            get {
                return this.PARENTPARTField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTPARTField, value) != true)) {
                    this.PARENTPARTField = value;
                    this.RaisePropertyChanged("PARENTPART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNUMBER {
            get {
                return this.PARTNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNUMBERField, value) != true)) {
                    this.PARTNUMBERField = value;
                    this.RaisePropertyChanged("PARTNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VARIANTFLAG {
            get {
                return this.VARIANTFLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.VARIANTFLAGField, value) != true)) {
                    this.VARIANTFLAGField = value;
                    this.RaisePropertyChanged("VARIANTFLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.WorkCenter> WORKCENTERS {
            get {
                return this.WORKCENTERSField;
            }
            set {
                if ((object.ReferenceEquals(this.WORKCENTERSField, value) != true)) {
                    this.WORKCENTERSField = value;
                    this.RaisePropertyChanged("WORKCENTERS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkCenter", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class WorkCenter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueRecord", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class QueueRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ACTIONNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADDED_BYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ADD_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BASEPARTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ERRORLOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FINISH_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HITSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IS_TWINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LIBRARYPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ORGCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PIERCESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PRIORITYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESULT_STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime START_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TOOLCHANGESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TOOLPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VERSIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WORKCENTERField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACTIONNAME {
            get {
                return this.ACTIONNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ACTIONNAMEField, value) != true)) {
                    this.ACTIONNAMEField = value;
                    this.RaisePropertyChanged("ACTIONNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADDED_BY {
            get {
                return this.ADDED_BYField;
            }
            set {
                if ((object.ReferenceEquals(this.ADDED_BYField, value) != true)) {
                    this.ADDED_BYField = value;
                    this.RaisePropertyChanged("ADDED_BY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ADD_DATE {
            get {
                return this.ADD_DATEField;
            }
            set {
                if ((this.ADD_DATEField.Equals(value) != true)) {
                    this.ADD_DATEField = value;
                    this.RaisePropertyChanged("ADD_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BASEPART {
            get {
                return this.BASEPARTField;
            }
            set {
                if ((object.ReferenceEquals(this.BASEPARTField, value) != true)) {
                    this.BASEPARTField = value;
                    this.RaisePropertyChanged("BASEPART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ERRORLOG {
            get {
                return this.ERRORLOGField;
            }
            set {
                if ((object.ReferenceEquals(this.ERRORLOGField, value) != true)) {
                    this.ERRORLOGField = value;
                    this.RaisePropertyChanged("ERRORLOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FINISH_DATE {
            get {
                return this.FINISH_DATEField;
            }
            set {
                if ((this.FINISH_DATEField.Equals(value) != true)) {
                    this.FINISH_DATEField = value;
                    this.RaisePropertyChanged("FINISH_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HITS {
            get {
                return this.HITSField;
            }
            set {
                if ((this.HITSField.Equals(value) != true)) {
                    this.HITSField = value;
                    this.RaisePropertyChanged("HITS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IS_TWIN {
            get {
                return this.IS_TWINField;
            }
            set {
                if ((this.IS_TWINField.Equals(value) != true)) {
                    this.IS_TWINField = value;
                    this.RaisePropertyChanged("IS_TWIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LIBRARYPATH {
            get {
                return this.LIBRARYPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.LIBRARYPATHField, value) != true)) {
                    this.LIBRARYPATHField = value;
                    this.RaisePropertyChanged("LIBRARYPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIALCODE {
            get {
                return this.MATERIALCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALCODEField, value) != true)) {
                    this.MATERIALCODEField = value;
                    this.RaisePropertyChanged("MATERIALCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORGCODE {
            get {
                return this.ORGCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORGCODEField, value) != true)) {
                    this.ORGCODEField = value;
                    this.RaisePropertyChanged("ORGCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNUMBER {
            get {
                return this.PARTNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNUMBERField, value) != true)) {
                    this.PARTNUMBERField = value;
                    this.RaisePropertyChanged("PARTNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PIERCES {
            get {
                return this.PIERCESField;
            }
            set {
                if ((this.PIERCESField.Equals(value) != true)) {
                    this.PIERCESField = value;
                    this.RaisePropertyChanged("PIERCES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POST {
            get {
                return this.POSTField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTField, value) != true)) {
                    this.POSTField = value;
                    this.RaisePropertyChanged("POST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PRIORITY {
            get {
                return this.PRIORITYField;
            }
            set {
                if ((this.PRIORITYField.Equals(value) != true)) {
                    this.PRIORITYField = value;
                    this.RaisePropertyChanged("PRIORITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESULT_STATUS {
            get {
                return this.RESULT_STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.RESULT_STATUSField, value) != true)) {
                    this.RESULT_STATUSField = value;
                    this.RaisePropertyChanged("RESULT_STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime START_DATE {
            get {
                return this.START_DATEField;
            }
            set {
                if ((this.START_DATEField.Equals(value) != true)) {
                    this.START_DATEField = value;
                    this.RaisePropertyChanged("START_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TOOLCHANGES {
            get {
                return this.TOOLCHANGESField;
            }
            set {
                if ((this.TOOLCHANGESField.Equals(value) != true)) {
                    this.TOOLCHANGESField = value;
                    this.RaisePropertyChanged("TOOLCHANGES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TOOLPATH {
            get {
                return this.TOOLPATHField;
            }
            set {
                if ((this.TOOLPATHField.Equals(value) != true)) {
                    this.TOOLPATHField = value;
                    this.RaisePropertyChanged("TOOLPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VERSION {
            get {
                return this.VERSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.VERSIONField, value) != true)) {
                    this.VERSIONField = value;
                    this.RaisePropertyChanged("VERSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WORKCENTER {
            get {
                return this.WORKCENTERField;
            }
            set {
                if ((object.ReferenceEquals(this.WORKCENTERField, value) != true)) {
                    this.WORKCENTERField = value;
                    this.RaisePropertyChanged("WORKCENTER");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryResult", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class LibraryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FINISH_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime REQUESTDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESULTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime START_DATEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FINISH_DATE {
            get {
                return this.FINISH_DATEField;
            }
            set {
                if ((this.FINISH_DATEField.Equals(value) != true)) {
                    this.FINISH_DATEField = value;
                    this.RaisePropertyChanged("FINISH_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNUMBER {
            get {
                return this.PARTNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNUMBERField, value) != true)) {
                    this.PARTNUMBERField = value;
                    this.RaisePropertyChanged("PARTNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime REQUESTDATE {
            get {
                return this.REQUESTDATEField;
            }
            set {
                if ((this.REQUESTDATEField.Equals(value) != true)) {
                    this.REQUESTDATEField = value;
                    this.RaisePropertyChanged("REQUESTDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESULT {
            get {
                return this.RESULTField;
            }
            set {
                if ((object.ReferenceEquals(this.RESULTField, value) != true)) {
                    this.RESULTField = value;
                    this.RaisePropertyChanged("RESULT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime START_DATE {
            get {
                return this.START_DATEField;
            }
            set {
                if ((this.START_DATEField.Equals(value) != true)) {
                    this.START_DATEField = value;
                    this.RaisePropertyChanged("START_DATE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueTotals", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class QueueTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int COMPLETE_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ERROR_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int INPROCESS_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LIBRARYPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NODXF_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NOTFND_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ONHOLD_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PENDING_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PROCESSING_DATAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SUCCESS_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TIMEOUT_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WORKCCENTER_COUNTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WORKCENTERField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int COMPLETE_COUNT {
            get {
                return this.COMPLETE_COUNTField;
            }
            set {
                if ((this.COMPLETE_COUNTField.Equals(value) != true)) {
                    this.COMPLETE_COUNTField = value;
                    this.RaisePropertyChanged("COMPLETE_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ERROR_COUNT {
            get {
                return this.ERROR_COUNTField;
            }
            set {
                if ((this.ERROR_COUNTField.Equals(value) != true)) {
                    this.ERROR_COUNTField = value;
                    this.RaisePropertyChanged("ERROR_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int INPROCESS_COUNT {
            get {
                return this.INPROCESS_COUNTField;
            }
            set {
                if ((this.INPROCESS_COUNTField.Equals(value) != true)) {
                    this.INPROCESS_COUNTField = value;
                    this.RaisePropertyChanged("INPROCESS_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LIBRARYPATH {
            get {
                return this.LIBRARYPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.LIBRARYPATHField, value) != true)) {
                    this.LIBRARYPATHField = value;
                    this.RaisePropertyChanged("LIBRARYPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NODXF_COUNT {
            get {
                return this.NODXF_COUNTField;
            }
            set {
                if ((this.NODXF_COUNTField.Equals(value) != true)) {
                    this.NODXF_COUNTField = value;
                    this.RaisePropertyChanged("NODXF_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NOTFND_COUNT {
            get {
                return this.NOTFND_COUNTField;
            }
            set {
                if ((this.NOTFND_COUNTField.Equals(value) != true)) {
                    this.NOTFND_COUNTField = value;
                    this.RaisePropertyChanged("NOTFND_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ONHOLD_COUNT {
            get {
                return this.ONHOLD_COUNTField;
            }
            set {
                if ((this.ONHOLD_COUNTField.Equals(value) != true)) {
                    this.ONHOLD_COUNTField = value;
                    this.RaisePropertyChanged("ONHOLD_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PENDING_COUNT {
            get {
                return this.PENDING_COUNTField;
            }
            set {
                if ((this.PENDING_COUNTField.Equals(value) != true)) {
                    this.PENDING_COUNTField = value;
                    this.RaisePropertyChanged("PENDING_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PROCESSING_DATA {
            get {
                return this.PROCESSING_DATAField;
            }
            set {
                if ((object.ReferenceEquals(this.PROCESSING_DATAField, value) != true)) {
                    this.PROCESSING_DATAField = value;
                    this.RaisePropertyChanged("PROCESSING_DATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SUCCESS_COUNT {
            get {
                return this.SUCCESS_COUNTField;
            }
            set {
                if ((this.SUCCESS_COUNTField.Equals(value) != true)) {
                    this.SUCCESS_COUNTField = value;
                    this.RaisePropertyChanged("SUCCESS_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TIMEOUT_COUNT {
            get {
                return this.TIMEOUT_COUNTField;
            }
            set {
                if ((this.TIMEOUT_COUNTField.Equals(value) != true)) {
                    this.TIMEOUT_COUNTField = value;
                    this.RaisePropertyChanged("TIMEOUT_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WORKCCENTER_COUNT {
            get {
                return this.WORKCCENTER_COUNTField;
            }
            set {
                if ((this.WORKCCENTER_COUNTField.Equals(value) != true)) {
                    this.WORKCCENTER_COUNTField = value;
                    this.RaisePropertyChanged("WORKCCENTER_COUNT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WORKCENTER {
            get {
                return this.WORKCENTERField;
            }
            set {
                if ((object.ReferenceEquals(this.WORKCENTERField, value) != true)) {
                    this.WORKCENTERField = value;
                    this.RaisePropertyChanged("WORKCENTER");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryRecord", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class LibraryRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ADD_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ERRORLOGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FINISH_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int INVENTORY_ITEM_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LOG_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POSTPROCESSORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESOURCENAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESULTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime START_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ADD_DATE {
            get {
                return this.ADD_DATEField;
            }
            set {
                if ((this.ADD_DATEField.Equals(value) != true)) {
                    this.ADD_DATEField = value;
                    this.RaisePropertyChanged("ADD_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ERRORLOG {
            get {
                return this.ERRORLOGField;
            }
            set {
                if ((object.ReferenceEquals(this.ERRORLOGField, value) != true)) {
                    this.ERRORLOGField = value;
                    this.RaisePropertyChanged("ERRORLOG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FINISH_DATE {
            get {
                return this.FINISH_DATEField;
            }
            set {
                if ((this.FINISH_DATEField.Equals(value) != true)) {
                    this.FINISH_DATEField = value;
                    this.RaisePropertyChanged("FINISH_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int INVENTORY_ITEM_ID {
            get {
                return this.INVENTORY_ITEM_IDField;
            }
            set {
                if ((this.INVENTORY_ITEM_IDField.Equals(value) != true)) {
                    this.INVENTORY_ITEM_IDField = value;
                    this.RaisePropertyChanged("INVENTORY_ITEM_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LOG_DATE {
            get {
                return this.LOG_DATEField;
            }
            set {
                if ((this.LOG_DATEField.Equals(value) != true)) {
                    this.LOG_DATEField = value;
                    this.RaisePropertyChanged("LOG_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIAL {
            get {
                return this.MATERIALField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALField, value) != true)) {
                    this.MATERIALField = value;
                    this.RaisePropertyChanged("MATERIAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNUMBER {
            get {
                return this.PARTNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNUMBERField, value) != true)) {
                    this.PARTNUMBERField = value;
                    this.RaisePropertyChanged("PARTNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTPROCESSOR {
            get {
                return this.POSTPROCESSORField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTPROCESSORField, value) != true)) {
                    this.POSTPROCESSORField = value;
                    this.RaisePropertyChanged("POSTPROCESSOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESOURCENAME {
            get {
                return this.RESOURCENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RESOURCENAMEField, value) != true)) {
                    this.RESOURCENAMEField = value;
                    this.RaisePropertyChanged("RESOURCENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESULT {
            get {
                return this.RESULTField;
            }
            set {
                if ((object.ReferenceEquals(this.RESULTField, value) != true)) {
                    this.RESULTField = value;
                    this.RaisePropertyChanged("RESULT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime START_DATE {
            get {
                return this.START_DATEField;
            }
            set {
                if ((this.START_DATEField.Equals(value) != true)) {
                    this.START_DATEField = value;
                    this.RaisePropertyChanged("START_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RollFormCnc", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class RollFormCnc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BLANKWIDTHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNC_CODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COILMATERIALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal COILWIDTHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HEIGHTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LINERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool STARTER_PANELField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BLANKWIDTH {
            get {
                return this.BLANKWIDTHField;
            }
            set {
                if ((this.BLANKWIDTHField.Equals(value) != true)) {
                    this.BLANKWIDTHField = value;
                    this.RaisePropertyChanged("BLANKWIDTH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNC_CODE {
            get {
                return this.CNC_CODEField;
            }
            set {
                if ((object.ReferenceEquals(this.CNC_CODEField, value) != true)) {
                    this.CNC_CODEField = value;
                    this.RaisePropertyChanged("CNC_CODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COILMATERIAL {
            get {
                return this.COILMATERIALField;
            }
            set {
                if ((object.ReferenceEquals(this.COILMATERIALField, value) != true)) {
                    this.COILMATERIALField = value;
                    this.RaisePropertyChanged("COILMATERIAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal COILWIDTH {
            get {
                return this.COILWIDTHField;
            }
            set {
                if ((this.COILWIDTHField.Equals(value) != true)) {
                    this.COILWIDTHField = value;
                    this.RaisePropertyChanged("COILWIDTH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HEIGHT {
            get {
                return this.HEIGHTField;
            }
            set {
                if ((this.HEIGHTField.Equals(value) != true)) {
                    this.HEIGHTField = value;
                    this.RaisePropertyChanged("HEIGHT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LINER {
            get {
                return this.LINERField;
            }
            set {
                if ((this.LINERField.Equals(value) != true)) {
                    this.LINERField = value;
                    this.RaisePropertyChanged("LINER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIAL {
            get {
                return this.MATERIALField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALField, value) != true)) {
                    this.MATERIALField = value;
                    this.RaisePropertyChanged("MATERIAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool STARTER_PANEL {
            get {
                return this.STARTER_PANELField;
            }
            set {
                if ((this.STARTER_PANELField.Equals(value) != true)) {
                    this.STARTER_PANELField = value;
                    this.RaisePropertyChanged("STARTER_PANEL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NestPost", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class NestPost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POSTNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SYNCPOSTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POSTNAME {
            get {
                return this.POSTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTNAMEField, value) != true)) {
                    this.POSTNAMEField = value;
                    this.RaisePropertyChanged("POSTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SYNCPOST {
            get {
                return this.SYNCPOSTField;
            }
            set {
                if ((this.SYNCPOSTField.Equals(value) != true)) {
                    this.SYNCPOSTField = value;
                    this.RaisePropertyChanged("SYNCPOST");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryServiceReference.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ProcessLibraryRequest", ReplyAction="http://tempuri.org/ILibraryService/ProcessLibraryRequestResponse")]
        string ProcessLibraryRequest(Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ProcessLibraryRequest", ReplyAction="http://tempuri.org/ILibraryService/ProcessLibraryRequestResponse")]
        System.Threading.Tasks.Task<string> ProcessLibraryRequestAsync(Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetQueueRecords", ReplyAction="http://tempuri.org/ILibraryService/GetQueueRecordsResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord> GetQueueRecords(int orgid, string partnumber, string status, string workcenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetQueueRecords", ReplyAction="http://tempuri.org/ILibraryService/GetQueueRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord>> GetQueueRecordsAsync(int orgid, string partnumber, string status, string workcenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/LogError", ReplyAction="http://tempuri.org/ILibraryService/LogErrorResponse")]
        void LogError(string currentID, string currentUser, string currentParams, string currentModule, string currentMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/LogError", ReplyAction="http://tempuri.org/ILibraryService/LogErrorResponse")]
        System.Threading.Tasks.Task LogErrorAsync(string currentID, string currentUser, string currentParams, string currentModule, string currentMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/FinishQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/FinishQueueRecordResponse")]
        string FinishQueueRecord(int recordid, string resultStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/FinishQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/FinishQueueRecordResponse")]
        System.Threading.Tasks.Task<string> FinishQueueRecordAsync(int recordid, string resultStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ResetQueue", ReplyAction="http://tempuri.org/ILibraryService/ResetQueueResponse")]
        void ResetQueue(int orgid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ResetQueue", ReplyAction="http://tempuri.org/ILibraryService/ResetQueueResponse")]
        System.Threading.Tasks.Task ResetQueueAsync(int orgid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StartQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/StartQueueRecordResponse")]
        string StartQueueRecord(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StartQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/StartQueueRecordResponse")]
        System.Threading.Tasks.Task<string> StartQueueRecordAsync(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ResetQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/ResetQueueRecordResponse")]
        string ResetQueueRecord(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ResetQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/ResetQueueRecordResponse")]
        System.Threading.Tasks.Task<string> ResetQueueRecordAsync(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryResultsByResource", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryResultsByResourceResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult> GetLibraryResultsByResource(int requestedResource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryResultsByResource", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryResultsByResourceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult>> GetLibraryResultsByResourceAsync(int requestedResource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryResultsByResourceNest", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryResultsByResourceNestResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult> GetLibraryResultsByResourceNest(int requestedResource, int requestedNestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryResultsByResourceNest", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryResultsByResourceNestResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult>> GetLibraryResultsByResourceNestAsync(int requestedResource, int requestedNestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetSyncResultsByResource", ReplyAction="http://tempuri.org/ILibraryService/GetSyncResultsByResourceResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult> GetSyncResultsByResource(int requestedResource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetSyncResultsByResource", ReplyAction="http://tempuri.org/ILibraryService/GetSyncResultsByResourceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult>> GetSyncResultsByResourceAsync(int requestedResource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/InsertLibraryResult", ReplyAction="http://tempuri.org/ILibraryService/InsertLibraryResultResponse")]
        string InsertLibraryResult(Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord qrec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/InsertLibraryResult", ReplyAction="http://tempuri.org/ILibraryService/InsertLibraryResultResponse")]
        System.Threading.Tasks.Task<string> InsertLibraryResultAsync(Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord qrec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetNextQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/GetNextQueueRecordResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord> GetNextQueueRecord(string Resource, int maxReturn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetNextQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/GetNextQueueRecordResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord>> GetNextQueueRecordAsync(string Resource, int maxReturn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ScrubQueueResult", ReplyAction="http://tempuri.org/ILibraryService/ScrubQueueResultResponse")]
        void ScrubQueueResult(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ScrubQueueResult", ReplyAction="http://tempuri.org/ILibraryService/ScrubQueueResultResponse")]
        System.Threading.Tasks.Task ScrubQueueResultAsync(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ToggleLibraryPost", ReplyAction="http://tempuri.org/ILibraryService/ToggleLibraryPostResponse")]
        void ToggleLibraryPost(string db, string requestedResource, string toggleState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ToggleLibraryPost", ReplyAction="http://tempuri.org/ILibraryService/ToggleLibraryPostResponse")]
        System.Threading.Tasks.Task ToggleLibraryPostAsync(string db, string requestedResource, string toggleState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetQueueTotals", ReplyAction="http://tempuri.org/ILibraryService/GetQueueTotalsResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueTotals> GetQueueTotals(string librarypath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetQueueTotals", ReplyAction="http://tempuri.org/ILibraryService/GetQueueTotalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueTotals>> GetQueueTotalsAsync(string librarypath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ProcessManualRequest", ReplyAction="http://tempuri.org/ILibraryService/ProcessManualRequestResponse")]
        string ProcessManualRequest(string db, string requestSource, Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ProcessManualRequest", ReplyAction="http://tempuri.org/ILibraryService/ProcessManualRequestResponse")]
        System.Threading.Tasks.Task<string> ProcessManualRequestAsync(string db, string requestSource, Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ClearPendingByWorkcenterDateRange", ReplyAction="http://tempuri.org/ILibraryService/ClearPendingByWorkcenterDateRangeResponse")]
        void ClearPendingByWorkcenterDateRange(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ClearPendingByWorkcenterDateRange", ReplyAction="http://tempuri.org/ILibraryService/ClearPendingByWorkcenterDateRangeResponse")]
        System.Threading.Tasks.Task ClearPendingByWorkcenterDateRangeAsync(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ClearSyncsByWorkcenter", ReplyAction="http://tempuri.org/ILibraryService/ClearSyncsByWorkcenterResponse")]
        void ClearSyncsByWorkcenter(string db, string requestedWorkcenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ClearSyncsByWorkcenter", ReplyAction="http://tempuri.org/ILibraryService/ClearSyncsByWorkcenterResponse")]
        System.Threading.Tasks.Task ClearSyncsByWorkcenterAsync(string db, string requestedWorkcenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByPart", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByPartResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByPart(string db, string requestedWorkcenter, string requestedPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByPart", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByPartResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByPartAsync(string db, string requestedWorkcenter, string requestedPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterDateRange", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterDateRangeResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByWorkcenterDateRange(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterDateRange", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterDateRangeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByWorkcenterDateRangeAsync(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterResult", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterResultResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByWorkcenterResult(string db, string requestedWorkcenter, string requestedResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterResult", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterResultResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByWorkcenterResultAsync(string db, string requestedWorkcenter, string requestedResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterStatus", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterStatusResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByWorkcenterStatus(string db, string requestedWorkcenter, string requestedStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterStatus", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryByWorkcenterStatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByWorkcenterStatusAsync(string db, string requestedWorkcenter, string requestedStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryHistoryByPart", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryHistoryByPartResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryHistoryByPart(string db, string requestedWorkcenter, string requestedPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetLibraryHistoryByPart", ReplyAction="http://tempuri.org/ILibraryService/GetLibraryHistoryByPartResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryHistoryByPartAsync(string db, string requestedWorkcenter, string requestedPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRollformerCode", ReplyAction="http://tempuri.org/ILibraryService/GetRollformerCodeResponse")]
        Powell.Mfg.LibraryWinService.LibraryServiceReference.RollFormCnc GetRollformerCode(string db, string requestedPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetRollformerCode", ReplyAction="http://tempuri.org/ILibraryService/GetRollformerCodeResponse")]
        System.Threading.Tasks.Task<Powell.Mfg.LibraryWinService.LibraryServiceReference.RollFormCnc> GetRollformerCodeAsync(string db, string requestedPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetResultTypes", ReplyAction="http://tempuri.org/ILibraryService/GetResultTypesResponse")]
        System.Collections.Generic.List<string> GetResultTypes(string db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetResultTypes", ReplyAction="http://tempuri.org/ILibraryService/GetResultTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetResultTypesAsync(string db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetNestPostsList", ReplyAction="http://tempuri.org/ILibraryService/GetNestPostsListResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.NestPost> GetNestPostsList(string db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetNestPostsList", ReplyAction="http://tempuri.org/ILibraryService/GetNestPostsListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.NestPost>> GetNestPostsListAsync(string db);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : Powell.Mfg.LibraryWinService.LibraryServiceReference.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<Powell.Mfg.LibraryWinService.LibraryServiceReference.ILibraryService>, Powell.Mfg.LibraryWinService.LibraryServiceReference.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ProcessLibraryRequest(Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq) {
            return base.Channel.ProcessLibraryRequest(theLibReq);
        }
        
        public System.Threading.Tasks.Task<string> ProcessLibraryRequestAsync(Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq) {
            return base.Channel.ProcessLibraryRequestAsync(theLibReq);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord> GetQueueRecords(int orgid, string partnumber, string status, string workcenter) {
            return base.Channel.GetQueueRecords(orgid, partnumber, status, workcenter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord>> GetQueueRecordsAsync(int orgid, string partnumber, string status, string workcenter) {
            return base.Channel.GetQueueRecordsAsync(orgid, partnumber, status, workcenter);
        }
        
        public void LogError(string currentID, string currentUser, string currentParams, string currentModule, string currentMsg) {
            base.Channel.LogError(currentID, currentUser, currentParams, currentModule, currentMsg);
        }
        
        public System.Threading.Tasks.Task LogErrorAsync(string currentID, string currentUser, string currentParams, string currentModule, string currentMsg) {
            return base.Channel.LogErrorAsync(currentID, currentUser, currentParams, currentModule, currentMsg);
        }
        
        public string FinishQueueRecord(int recordid, string resultStatus) {
            return base.Channel.FinishQueueRecord(recordid, resultStatus);
        }
        
        public System.Threading.Tasks.Task<string> FinishQueueRecordAsync(int recordid, string resultStatus) {
            return base.Channel.FinishQueueRecordAsync(recordid, resultStatus);
        }
        
        public void ResetQueue(int orgid) {
            base.Channel.ResetQueue(orgid);
        }
        
        public System.Threading.Tasks.Task ResetQueueAsync(int orgid) {
            return base.Channel.ResetQueueAsync(orgid);
        }
        
        public string StartQueueRecord(int recordid) {
            return base.Channel.StartQueueRecord(recordid);
        }
        
        public System.Threading.Tasks.Task<string> StartQueueRecordAsync(int recordid) {
            return base.Channel.StartQueueRecordAsync(recordid);
        }
        
        public string ResetQueueRecord(int recordid) {
            return base.Channel.ResetQueueRecord(recordid);
        }
        
        public System.Threading.Tasks.Task<string> ResetQueueRecordAsync(int recordid) {
            return base.Channel.ResetQueueRecordAsync(recordid);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult> GetLibraryResultsByResource(int requestedResource) {
            return base.Channel.GetLibraryResultsByResource(requestedResource);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult>> GetLibraryResultsByResourceAsync(int requestedResource) {
            return base.Channel.GetLibraryResultsByResourceAsync(requestedResource);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult> GetLibraryResultsByResourceNest(int requestedResource, int requestedNestID) {
            return base.Channel.GetLibraryResultsByResourceNest(requestedResource, requestedNestID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult>> GetLibraryResultsByResourceNestAsync(int requestedResource, int requestedNestID) {
            return base.Channel.GetLibraryResultsByResourceNestAsync(requestedResource, requestedNestID);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult> GetSyncResultsByResource(int requestedResource) {
            return base.Channel.GetSyncResultsByResource(requestedResource);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryResult>> GetSyncResultsByResourceAsync(int requestedResource) {
            return base.Channel.GetSyncResultsByResourceAsync(requestedResource);
        }
        
        public string InsertLibraryResult(Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord qrec) {
            return base.Channel.InsertLibraryResult(qrec);
        }
        
        public System.Threading.Tasks.Task<string> InsertLibraryResultAsync(Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord qrec) {
            return base.Channel.InsertLibraryResultAsync(qrec);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord> GetNextQueueRecord(string Resource, int maxReturn) {
            return base.Channel.GetNextQueueRecord(Resource, maxReturn);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueRecord>> GetNextQueueRecordAsync(string Resource, int maxReturn) {
            return base.Channel.GetNextQueueRecordAsync(Resource, maxReturn);
        }
        
        public void ScrubQueueResult(int recordid) {
            base.Channel.ScrubQueueResult(recordid);
        }
        
        public System.Threading.Tasks.Task ScrubQueueResultAsync(int recordid) {
            return base.Channel.ScrubQueueResultAsync(recordid);
        }
        
        public void ToggleLibraryPost(string db, string requestedResource, string toggleState) {
            base.Channel.ToggleLibraryPost(db, requestedResource, toggleState);
        }
        
        public System.Threading.Tasks.Task ToggleLibraryPostAsync(string db, string requestedResource, string toggleState) {
            return base.Channel.ToggleLibraryPostAsync(db, requestedResource, toggleState);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueTotals> GetQueueTotals(string librarypath) {
            return base.Channel.GetQueueTotals(librarypath);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.QueueTotals>> GetQueueTotalsAsync(string librarypath) {
            return base.Channel.GetQueueTotalsAsync(librarypath);
        }
        
        public string ProcessManualRequest(string db, string requestSource, Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq) {
            return base.Channel.ProcessManualRequest(db, requestSource, theLibReq);
        }
        
        public System.Threading.Tasks.Task<string> ProcessManualRequestAsync(string db, string requestSource, Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRequest theLibReq) {
            return base.Channel.ProcessManualRequestAsync(db, requestSource, theLibReq);
        }
        
        public void ClearPendingByWorkcenterDateRange(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd) {
            base.Channel.ClearPendingByWorkcenterDateRange(db, requestedWorkcenter, requestedStart, requestedEnd);
        }
        
        public System.Threading.Tasks.Task ClearPendingByWorkcenterDateRangeAsync(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd) {
            return base.Channel.ClearPendingByWorkcenterDateRangeAsync(db, requestedWorkcenter, requestedStart, requestedEnd);
        }
        
        public void ClearSyncsByWorkcenter(string db, string requestedWorkcenter) {
            base.Channel.ClearSyncsByWorkcenter(db, requestedWorkcenter);
        }
        
        public System.Threading.Tasks.Task ClearSyncsByWorkcenterAsync(string db, string requestedWorkcenter) {
            return base.Channel.ClearSyncsByWorkcenterAsync(db, requestedWorkcenter);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByPart(string db, string requestedWorkcenter, string requestedPart) {
            return base.Channel.GetLibraryByPart(db, requestedWorkcenter, requestedPart);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByPartAsync(string db, string requestedWorkcenter, string requestedPart) {
            return base.Channel.GetLibraryByPartAsync(db, requestedWorkcenter, requestedPart);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByWorkcenterDateRange(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd) {
            return base.Channel.GetLibraryByWorkcenterDateRange(db, requestedWorkcenter, requestedStart, requestedEnd);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByWorkcenterDateRangeAsync(string db, string requestedWorkcenter, System.DateTime requestedStart, System.DateTime requestedEnd) {
            return base.Channel.GetLibraryByWorkcenterDateRangeAsync(db, requestedWorkcenter, requestedStart, requestedEnd);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByWorkcenterResult(string db, string requestedWorkcenter, string requestedResult) {
            return base.Channel.GetLibraryByWorkcenterResult(db, requestedWorkcenter, requestedResult);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByWorkcenterResultAsync(string db, string requestedWorkcenter, string requestedResult) {
            return base.Channel.GetLibraryByWorkcenterResultAsync(db, requestedWorkcenter, requestedResult);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryByWorkcenterStatus(string db, string requestedWorkcenter, string requestedStatus) {
            return base.Channel.GetLibraryByWorkcenterStatus(db, requestedWorkcenter, requestedStatus);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryByWorkcenterStatusAsync(string db, string requestedWorkcenter, string requestedStatus) {
            return base.Channel.GetLibraryByWorkcenterStatusAsync(db, requestedWorkcenter, requestedStatus);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord> GetLibraryHistoryByPart(string db, string requestedWorkcenter, string requestedPart) {
            return base.Channel.GetLibraryHistoryByPart(db, requestedWorkcenter, requestedPart);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.LibraryRecord>> GetLibraryHistoryByPartAsync(string db, string requestedWorkcenter, string requestedPart) {
            return base.Channel.GetLibraryHistoryByPartAsync(db, requestedWorkcenter, requestedPart);
        }
        
        public Powell.Mfg.LibraryWinService.LibraryServiceReference.RollFormCnc GetRollformerCode(string db, string requestedPart) {
            return base.Channel.GetRollformerCode(db, requestedPart);
        }
        
        public System.Threading.Tasks.Task<Powell.Mfg.LibraryWinService.LibraryServiceReference.RollFormCnc> GetRollformerCodeAsync(string db, string requestedPart) {
            return base.Channel.GetRollformerCodeAsync(db, requestedPart);
        }
        
        public System.Collections.Generic.List<string> GetResultTypes(string db) {
            return base.Channel.GetResultTypes(db);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetResultTypesAsync(string db) {
            return base.Channel.GetResultTypesAsync(db);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.NestPost> GetNestPostsList(string db) {
            return base.Channel.GetNestPostsList(db);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryServiceReference.NestPost>> GetNestPostsListAsync(string db) {
            return base.Channel.GetNestPostsListAsync(db);
        }
    }
}
