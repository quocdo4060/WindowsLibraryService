//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Powell.Mfg.LibraryWinService.ResourceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTOLABELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTOLOGOFFRUN_MINUTESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTOLOGOFF_MINUTESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTOTRAVELERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AUTO_APPROVEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CALC_RUNTIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CLOCKINOUT_RESOURCEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int COMPLEX_KITTINGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DEPTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<string> DESTINATIONSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FORECAST_DAYSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GROUP_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KITTINGWINDOWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal KPI_REFRESHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KPI_REMOVETIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LASTLOGINDATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LASTUPDATEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LASTUPDATEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACHINE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MESONLY_MODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MIN_UTILIZATIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NESTTYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NESTVERSIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_BRAKEWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_DATEWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_JOBLIMITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_LIBRARYSERVERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_MACHABBREVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_MAPPEDDRIVEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_NESTINGBASEPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_PAINTWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_POSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_RESULTFILEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_SCRAPWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEST_SERVERPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_SPLITWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_URGENTWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_WELDSPLITWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NEST_WELDWEIGHTFACTORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> OPERATIONSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN> OPERATIONSNOTINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ORACLE_CURRENT_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORACLE_RESOURCEIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORACLE_TIME_OFFSETField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ORGCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PLC_TAGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRINTLABEL_PATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int REQUIREBATCHINPUTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RESOURCE_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESOURCE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SHOPLOCATIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SINGLEPARTPROGRAMPATHSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int USE_REMNANTSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTOLABEL {
            get {
                return this.AUTOLABELField;
            }
            set {
                if ((this.AUTOLABELField.Equals(value) != true)) {
                    this.AUTOLABELField = value;
                    this.RaisePropertyChanged("AUTOLABEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTOLOGOFFRUN_MINUTES {
            get {
                return this.AUTOLOGOFFRUN_MINUTESField;
            }
            set {
                if ((this.AUTOLOGOFFRUN_MINUTESField.Equals(value) != true)) {
                    this.AUTOLOGOFFRUN_MINUTESField = value;
                    this.RaisePropertyChanged("AUTOLOGOFFRUN_MINUTES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTOLOGOFF_MINUTES {
            get {
                return this.AUTOLOGOFF_MINUTESField;
            }
            set {
                if ((this.AUTOLOGOFF_MINUTESField.Equals(value) != true)) {
                    this.AUTOLOGOFF_MINUTESField = value;
                    this.RaisePropertyChanged("AUTOLOGOFF_MINUTES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTOTRAVELER {
            get {
                return this.AUTOTRAVELERField;
            }
            set {
                if ((this.AUTOTRAVELERField.Equals(value) != true)) {
                    this.AUTOTRAVELERField = value;
                    this.RaisePropertyChanged("AUTOTRAVELER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AUTO_APPROVE {
            get {
                return this.AUTO_APPROVEField;
            }
            set {
                if ((this.AUTO_APPROVEField.Equals(value) != true)) {
                    this.AUTO_APPROVEField = value;
                    this.RaisePropertyChanged("AUTO_APPROVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CALC_RUNTIME {
            get {
                return this.CALC_RUNTIMEField;
            }
            set {
                if ((this.CALC_RUNTIMEField.Equals(value) != true)) {
                    this.CALC_RUNTIMEField = value;
                    this.RaisePropertyChanged("CALC_RUNTIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CLOCKINOUT_RESOURCE {
            get {
                return this.CLOCKINOUT_RESOURCEField;
            }
            set {
                if ((this.CLOCKINOUT_RESOURCEField.Equals(value) != true)) {
                    this.CLOCKINOUT_RESOURCEField = value;
                    this.RaisePropertyChanged("CLOCKINOUT_RESOURCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int COMPLEX_KITTING {
            get {
                return this.COMPLEX_KITTINGField;
            }
            set {
                if ((this.COMPLEX_KITTINGField.Equals(value) != true)) {
                    this.COMPLEX_KITTINGField = value;
                    this.RaisePropertyChanged("COMPLEX_KITTING");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DEPT {
            get {
                return this.DEPTField;
            }
            set {
                if ((object.ReferenceEquals(this.DEPTField, value) != true)) {
                    this.DEPTField = value;
                    this.RaisePropertyChanged("DEPT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> DESTINATIONS {
            get {
                return this.DESTINATIONSField;
            }
            set {
                if ((object.ReferenceEquals(this.DESTINATIONSField, value) != true)) {
                    this.DESTINATIONSField = value;
                    this.RaisePropertyChanged("DESTINATIONS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FORECAST_DAYS {
            get {
                return this.FORECAST_DAYSField;
            }
            set {
                if ((this.FORECAST_DAYSField.Equals(value) != true)) {
                    this.FORECAST_DAYSField = value;
                    this.RaisePropertyChanged("FORECAST_DAYS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GROUP_ID {
            get {
                return this.GROUP_IDField;
            }
            set {
                if ((this.GROUP_IDField.Equals(value) != true)) {
                    this.GROUP_IDField = value;
                    this.RaisePropertyChanged("GROUP_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KITTINGWINDOW {
            get {
                return this.KITTINGWINDOWField;
            }
            set {
                if ((this.KITTINGWINDOWField.Equals(value) != true)) {
                    this.KITTINGWINDOWField = value;
                    this.RaisePropertyChanged("KITTINGWINDOW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal KPI_REFRESH {
            get {
                return this.KPI_REFRESHField;
            }
            set {
                if ((this.KPI_REFRESHField.Equals(value) != true)) {
                    this.KPI_REFRESHField = value;
                    this.RaisePropertyChanged("KPI_REFRESH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KPI_REMOVETIME {
            get {
                return this.KPI_REMOVETIMEField;
            }
            set {
                if ((this.KPI_REMOVETIMEField.Equals(value) != true)) {
                    this.KPI_REMOVETIMEField = value;
                    this.RaisePropertyChanged("KPI_REMOVETIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LASTLOGINDATE {
            get {
                return this.LASTLOGINDATEField;
            }
            set {
                if ((this.LASTLOGINDATEField.Equals(value) != true)) {
                    this.LASTLOGINDATEField = value;
                    this.RaisePropertyChanged("LASTLOGINDATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LASTUPDATED {
            get {
                return this.LASTUPDATEDField;
            }
            set {
                if ((this.LASTUPDATEDField.Equals(value) != true)) {
                    this.LASTUPDATEDField = value;
                    this.RaisePropertyChanged("LASTUPDATED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LASTUPDATEDBY {
            get {
                return this.LASTUPDATEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.LASTUPDATEDBYField, value) != true)) {
                    this.LASTUPDATEDBYField = value;
                    this.RaisePropertyChanged("LASTUPDATEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACHINE_NAME {
            get {
                return this.MACHINE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MACHINE_NAMEField, value) != true)) {
                    this.MACHINE_NAMEField = value;
                    this.RaisePropertyChanged("MACHINE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MESONLY_MODE {
            get {
                return this.MESONLY_MODEField;
            }
            set {
                if ((this.MESONLY_MODEField.Equals(value) != true)) {
                    this.MESONLY_MODEField = value;
                    this.RaisePropertyChanged("MESONLY_MODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MIN_UTILIZATION {
            get {
                return this.MIN_UTILIZATIONField;
            }
            set {
                if ((this.MIN_UTILIZATIONField.Equals(value) != true)) {
                    this.MIN_UTILIZATIONField = value;
                    this.RaisePropertyChanged("MIN_UTILIZATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NESTTYPE {
            get {
                return this.NESTTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.NESTTYPEField, value) != true)) {
                    this.NESTTYPEField = value;
                    this.RaisePropertyChanged("NESTTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NESTVERSION {
            get {
                return this.NESTVERSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.NESTVERSIONField, value) != true)) {
                    this.NESTVERSIONField = value;
                    this.RaisePropertyChanged("NESTVERSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_BRAKEWEIGHTFACTOR {
            get {
                return this.NEST_BRAKEWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_BRAKEWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_BRAKEWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_BRAKEWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_DATEWEIGHTFACTOR {
            get {
                return this.NEST_DATEWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_DATEWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_DATEWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_DATEWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_JOBLIMIT {
            get {
                return this.NEST_JOBLIMITField;
            }
            set {
                if ((this.NEST_JOBLIMITField.Equals(value) != true)) {
                    this.NEST_JOBLIMITField = value;
                    this.RaisePropertyChanged("NEST_JOBLIMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_LIBRARYSERVER {
            get {
                return this.NEST_LIBRARYSERVERField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_LIBRARYSERVERField, value) != true)) {
                    this.NEST_LIBRARYSERVERField = value;
                    this.RaisePropertyChanged("NEST_LIBRARYSERVER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_MACHABBREV {
            get {
                return this.NEST_MACHABBREVField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_MACHABBREVField, value) != true)) {
                    this.NEST_MACHABBREVField = value;
                    this.RaisePropertyChanged("NEST_MACHABBREV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_MAPPEDDRIVE {
            get {
                return this.NEST_MAPPEDDRIVEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_MAPPEDDRIVEField, value) != true)) {
                    this.NEST_MAPPEDDRIVEField = value;
                    this.RaisePropertyChanged("NEST_MAPPEDDRIVE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_NESTINGBASEPATH {
            get {
                return this.NEST_NESTINGBASEPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_NESTINGBASEPATHField, value) != true)) {
                    this.NEST_NESTINGBASEPATHField = value;
                    this.RaisePropertyChanged("NEST_NESTINGBASEPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_PAINTWEIGHTFACTOR {
            get {
                return this.NEST_PAINTWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_PAINTWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_PAINTWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_PAINTWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_POST {
            get {
                return this.NEST_POSTField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_POSTField, value) != true)) {
                    this.NEST_POSTField = value;
                    this.RaisePropertyChanged("NEST_POST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_RESULTFILE {
            get {
                return this.NEST_RESULTFILEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_RESULTFILEField, value) != true)) {
                    this.NEST_RESULTFILEField = value;
                    this.RaisePropertyChanged("NEST_RESULTFILE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_SCRAPWEIGHTFACTOR {
            get {
                return this.NEST_SCRAPWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_SCRAPWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_SCRAPWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_SCRAPWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEST_SERVERPATH {
            get {
                return this.NEST_SERVERPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.NEST_SERVERPATHField, value) != true)) {
                    this.NEST_SERVERPATHField = value;
                    this.RaisePropertyChanged("NEST_SERVERPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_SPLITWEIGHTFACTOR {
            get {
                return this.NEST_SPLITWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_SPLITWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_SPLITWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_SPLITWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_URGENTWEIGHTFACTOR {
            get {
                return this.NEST_URGENTWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_URGENTWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_URGENTWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_URGENTWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_WELDSPLITWEIGHTFACTOR {
            get {
                return this.NEST_WELDSPLITWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_WELDSPLITWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_WELDSPLITWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_WELDSPLITWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NEST_WELDWEIGHTFACTOR {
            get {
                return this.NEST_WELDWEIGHTFACTORField;
            }
            set {
                if ((this.NEST_WELDWEIGHTFACTORField.Equals(value) != true)) {
                    this.NEST_WELDWEIGHTFACTORField = value;
                    this.RaisePropertyChanged("NEST_WELDWEIGHTFACTOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> OPERATIONS {
            get {
                return this.OPERATIONSField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATIONSField, value) != true)) {
                    this.OPERATIONSField = value;
                    this.RaisePropertyChanged("OPERATIONS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN> OPERATIONSNOTIN {
            get {
                return this.OPERATIONSNOTINField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATIONSNOTINField, value) != true)) {
                    this.OPERATIONSNOTINField = value;
                    this.RaisePropertyChanged("OPERATIONSNOTIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ORACLE_CURRENT_TIME {
            get {
                return this.ORACLE_CURRENT_TIMEField;
            }
            set {
                if ((this.ORACLE_CURRENT_TIMEField.Equals(value) != true)) {
                    this.ORACLE_CURRENT_TIMEField = value;
                    this.RaisePropertyChanged("ORACLE_CURRENT_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORACLE_RESOURCEID {
            get {
                return this.ORACLE_RESOURCEIDField;
            }
            set {
                if ((this.ORACLE_RESOURCEIDField.Equals(value) != true)) {
                    this.ORACLE_RESOURCEIDField = value;
                    this.RaisePropertyChanged("ORACLE_RESOURCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORACLE_TIME_OFFSET {
            get {
                return this.ORACLE_TIME_OFFSETField;
            }
            set {
                if ((this.ORACLE_TIME_OFFSETField.Equals(value) != true)) {
                    this.ORACLE_TIME_OFFSETField = value;
                    this.RaisePropertyChanged("ORACLE_TIME_OFFSET");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORGCODE {
            get {
                return this.ORGCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORGCODEField, value) != true)) {
                    this.ORGCODEField = value;
                    this.RaisePropertyChanged("ORGCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PLC_TAG {
            get {
                return this.PLC_TAGField;
            }
            set {
                if ((object.ReferenceEquals(this.PLC_TAGField, value) != true)) {
                    this.PLC_TAGField = value;
                    this.RaisePropertyChanged("PLC_TAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRINTLABEL_PATH {
            get {
                return this.PRINTLABEL_PATHField;
            }
            set {
                if ((object.ReferenceEquals(this.PRINTLABEL_PATHField, value) != true)) {
                    this.PRINTLABEL_PATHField = value;
                    this.RaisePropertyChanged("PRINTLABEL_PATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int REQUIREBATCHINPUT {
            get {
                return this.REQUIREBATCHINPUTField;
            }
            set {
                if ((this.REQUIREBATCHINPUTField.Equals(value) != true)) {
                    this.REQUIREBATCHINPUTField = value;
                    this.RaisePropertyChanged("REQUIREBATCHINPUT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RESOURCE_ID {
            get {
                return this.RESOURCE_IDField;
            }
            set {
                if ((this.RESOURCE_IDField.Equals(value) != true)) {
                    this.RESOURCE_IDField = value;
                    this.RaisePropertyChanged("RESOURCE_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESOURCE_NAME {
            get {
                return this.RESOURCE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RESOURCE_NAMEField, value) != true)) {
                    this.RESOURCE_NAMEField = value;
                    this.RaisePropertyChanged("RESOURCE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SHOPLOCATION {
            get {
                return this.SHOPLOCATIONField;
            }
            set {
                if ((object.ReferenceEquals(this.SHOPLOCATIONField, value) != true)) {
                    this.SHOPLOCATIONField = value;
                    this.RaisePropertyChanged("SHOPLOCATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SINGLEPARTPROGRAMPATHS {
            get {
                return this.SINGLEPARTPROGRAMPATHSField;
            }
            set {
                if ((object.ReferenceEquals(this.SINGLEPARTPROGRAMPATHSField, value) != true)) {
                    this.SINGLEPARTPROGRAMPATHSField = value;
                    this.RaisePropertyChanged("SINGLEPARTPROGRAMPATHS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int USE_REMNANTS {
            get {
                return this.USE_REMNANTSField;
            }
            set {
                if ((this.USE_REMNANTSField.Equals(value) != true)) {
                    this.USE_REMNANTSField = value;
                    this.RaisePropertyChanged("USE_REMNANTS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceOperation", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class ResourceOperation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OPERATION_DESCRIPTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STANDARD_OPERATIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int STD_OP_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OPERATION_DESCRIPTION {
            get {
                return this.OPERATION_DESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATION_DESCRIPTIONField, value) != true)) {
                    this.OPERATION_DESCRIPTIONField = value;
                    this.RaisePropertyChanged("OPERATION_DESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STANDARD_OPERATION {
            get {
                return this.STANDARD_OPERATIONField;
            }
            set {
                if ((object.ReferenceEquals(this.STANDARD_OPERATIONField, value) != true)) {
                    this.STANDARD_OPERATIONField = value;
                    this.RaisePropertyChanged("STANDARD_OPERATION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int STD_OP_ID {
            get {
                return this.STD_OP_IDField;
            }
            set {
                if ((this.STD_OP_IDField.Equals(value) != true)) {
                    this.STD_OP_IDField = value;
                    this.RaisePropertyChanged("STD_OP_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceOperationNotIN", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class ResourceOperationNotIN : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OPERATIONDESCRIPTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RESOURCEIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STDOPCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int STDOPIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OPERATIONDESCRIPTION {
            get {
                return this.OPERATIONDESCRIPTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.OPERATIONDESCRIPTIONField, value) != true)) {
                    this.OPERATIONDESCRIPTIONField = value;
                    this.RaisePropertyChanged("OPERATIONDESCRIPTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RESOURCEID {
            get {
                return this.RESOURCEIDField;
            }
            set {
                if ((this.RESOURCEIDField.Equals(value) != true)) {
                    this.RESOURCEIDField = value;
                    this.RaisePropertyChanged("RESOURCEID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STDOPCODE {
            get {
                return this.STDOPCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.STDOPCODEField, value) != true)) {
                    this.STDOPCODEField = value;
                    this.RaisePropertyChanged("STDOPCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int STDOPID {
            get {
                return this.STDOPIDField;
            }
            set {
                if ((this.STDOPIDField.Equals(value) != true)) {
                    this.STDOPIDField = value;
                    this.RaisePropertyChanged("STDOPID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceChanges", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class ResourceChanges : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIELD_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HISTORY_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LAST_UPDATEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LAST_UPDATEDBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACHINE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NEW_VALUEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OLD_VALUEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIELD_NAME {
            get {
                return this.FIELD_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FIELD_NAMEField, value) != true)) {
                    this.FIELD_NAMEField = value;
                    this.RaisePropertyChanged("FIELD_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HISTORY_ID {
            get {
                return this.HISTORY_IDField;
            }
            set {
                if ((this.HISTORY_IDField.Equals(value) != true)) {
                    this.HISTORY_IDField = value;
                    this.RaisePropertyChanged("HISTORY_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LAST_UPDATED {
            get {
                return this.LAST_UPDATEDField;
            }
            set {
                if ((object.ReferenceEquals(this.LAST_UPDATEDField, value) != true)) {
                    this.LAST_UPDATEDField = value;
                    this.RaisePropertyChanged("LAST_UPDATED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LAST_UPDATEDBY {
            get {
                return this.LAST_UPDATEDBYField;
            }
            set {
                if ((object.ReferenceEquals(this.LAST_UPDATEDBYField, value) != true)) {
                    this.LAST_UPDATEDBYField = value;
                    this.RaisePropertyChanged("LAST_UPDATEDBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACHINE_NAME {
            get {
                return this.MACHINE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MACHINE_NAMEField, value) != true)) {
                    this.MACHINE_NAMEField = value;
                    this.RaisePropertyChanged("MACHINE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NEW_VALUE {
            get {
                return this.NEW_VALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.NEW_VALUEField, value) != true)) {
                    this.NEW_VALUEField = value;
                    this.RaisePropertyChanged("NEW_VALUE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OLD_VALUE {
            get {
                return this.OLD_VALUEField;
            }
            set {
                if ((object.ReferenceEquals(this.OLD_VALUEField, value) != true)) {
                    this.OLD_VALUEField = value;
                    this.RaisePropertyChanged("OLD_VALUE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceGroup", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class ResourceGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GROUP_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GROUP_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GROUP_ID {
            get {
                return this.GROUP_IDField;
            }
            set {
                if ((this.GROUP_IDField.Equals(value) != true)) {
                    this.GROUP_IDField = value;
                    this.RaisePropertyChanged("GROUP_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GROUP_NAME {
            get {
                return this.GROUP_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.GROUP_NAMEField, value) != true)) {
                    this.GROUP_NAMEField = value;
                    this.RaisePropertyChanged("GROUP_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceLibrary", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class ResourceLibrary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int COMMITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FILENAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HITSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMPORT_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMPORT_STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOGGED_BYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PIERCESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESOURCENAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RESOURCE_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REVISIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TOOLCHANGESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TOOLPATHField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int COMMIT {
            get {
                return this.COMMITField;
            }
            set {
                if ((this.COMMITField.Equals(value) != true)) {
                    this.COMMITField = value;
                    this.RaisePropertyChanged("COMMIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FILENAME {
            get {
                return this.FILENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.FILENAMEField, value) != true)) {
                    this.FILENAMEField = value;
                    this.RaisePropertyChanged("FILENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HITS {
            get {
                return this.HITSField;
            }
            set {
                if ((this.HITSField.Equals(value) != true)) {
                    this.HITSField = value;
                    this.RaisePropertyChanged("HITS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMPORT_ID {
            get {
                return this.IMPORT_IDField;
            }
            set {
                if ((this.IMPORT_IDField.Equals(value) != true)) {
                    this.IMPORT_IDField = value;
                    this.RaisePropertyChanged("IMPORT_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMPORT_STATUS {
            get {
                return this.IMPORT_STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.IMPORT_STATUSField, value) != true)) {
                    this.IMPORT_STATUSField = value;
                    this.RaisePropertyChanged("IMPORT_STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOGGED_BY {
            get {
                return this.LOGGED_BYField;
            }
            set {
                if ((object.ReferenceEquals(this.LOGGED_BYField, value) != true)) {
                    this.LOGGED_BYField = value;
                    this.RaisePropertyChanged("LOGGED_BY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIAL {
            get {
                return this.MATERIALField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALField, value) != true)) {
                    this.MATERIALField = value;
                    this.RaisePropertyChanged("MATERIAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNAME {
            get {
                return this.PARTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNAMEField, value) != true)) {
                    this.PARTNAMEField = value;
                    this.RaisePropertyChanged("PARTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PIERCES {
            get {
                return this.PIERCESField;
            }
            set {
                if ((this.PIERCESField.Equals(value) != true)) {
                    this.PIERCESField = value;
                    this.RaisePropertyChanged("PIERCES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESOURCENAME {
            get {
                return this.RESOURCENAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RESOURCENAMEField, value) != true)) {
                    this.RESOURCENAMEField = value;
                    this.RaisePropertyChanged("RESOURCENAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RESOURCE_ID {
            get {
                return this.RESOURCE_IDField;
            }
            set {
                if ((this.RESOURCE_IDField.Equals(value) != true)) {
                    this.RESOURCE_IDField = value;
                    this.RaisePropertyChanged("RESOURCE_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REVISION {
            get {
                return this.REVISIONField;
            }
            set {
                if ((object.ReferenceEquals(this.REVISIONField, value) != true)) {
                    this.REVISIONField = value;
                    this.RaisePropertyChanged("REVISION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TOOLCHANGES {
            get {
                return this.TOOLCHANGESField;
            }
            set {
                if ((this.TOOLCHANGESField.Equals(value) != true)) {
                    this.TOOLCHANGESField = value;
                    this.RaisePropertyChanged("TOOLCHANGES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TOOLPATH {
            get {
                return this.TOOLPATHField;
            }
            set {
                if ((this.TOOLPATHField.Equals(value) != true)) {
                    this.TOOLPATHField = value;
                    this.RaisePropertyChanged("TOOLPATH");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineChunk", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class MachineChunk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACHINE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NESTTYPEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RESOURCE_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESOURCE_NAMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACHINE_NAME {
            get {
                return this.MACHINE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MACHINE_NAMEField, value) != true)) {
                    this.MACHINE_NAMEField = value;
                    this.RaisePropertyChanged("MACHINE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NESTTYPE {
            get {
                return this.NESTTYPEField;
            }
            set {
                if ((object.ReferenceEquals(this.NESTTYPEField, value) != true)) {
                    this.NESTTYPEField = value;
                    this.RaisePropertyChanged("NESTTYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RESOURCE_ID {
            get {
                return this.RESOURCE_IDField;
            }
            set {
                if ((this.RESOURCE_IDField.Equals(value) != true)) {
                    this.RESOURCE_IDField = value;
                    this.RaisePropertyChanged("RESOURCE_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESOURCE_NAME {
            get {
                return this.RESOURCE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RESOURCE_NAMEField, value) != true)) {
                    this.RESOURCE_NAMEField = value;
                    this.RaisePropertyChanged("RESOURCE_NAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class Organization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ORGCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ORGNAMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORGCODE {
            get {
                return this.ORGCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORGCODEField, value) != true)) {
                    this.ORGCODEField = value;
                    this.RaisePropertyChanged("ORGCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORGNAME {
            get {
                return this.ORGNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORGNAMEField, value) != true)) {
                    this.ORGNAMEField = value;
                    this.RaisePropertyChanged("ORGNAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Destination", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class Destination : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LOCATIONIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOCATORField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SUBINVENTORYField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LOCATIONID {
            get {
                return this.LOCATIONIDField;
            }
            set {
                if ((this.LOCATIONIDField.Equals(value) != true)) {
                    this.LOCATIONIDField = value;
                    this.RaisePropertyChanged("LOCATIONID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOCATOR {
            get {
                return this.LOCATORField;
            }
            set {
                if ((object.ReferenceEquals(this.LOCATORField, value) != true)) {
                    this.LOCATORField = value;
                    this.RaisePropertyChanged("LOCATOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SUBINVENTORY {
            get {
                return this.SUBINVENTORYField;
            }
            set {
                if ((object.ReferenceEquals(this.SUBINVENTORYField, value) != true)) {
                    this.SUBINVENTORYField = value;
                    this.RaisePropertyChanged("SUBINVENTORY");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceChunk", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.Resource")]
    [System.SerializableAttribute()]
    public partial class ResourceChunk : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACHINE_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RESOURCE_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESOURCE_NAMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACHINE_NAME {
            get {
                return this.MACHINE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.MACHINE_NAMEField, value) != true)) {
                    this.MACHINE_NAMEField = value;
                    this.RaisePropertyChanged("MACHINE_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RESOURCE_ID {
            get {
                return this.RESOURCE_IDField;
            }
            set {
                if ((this.RESOURCE_IDField.Equals(value) != true)) {
                    this.RESOURCE_IDField = value;
                    this.RaisePropertyChanged("RESOURCE_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESOURCE_NAME {
            get {
                return this.RESOURCE_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.RESOURCE_NAMEField, value) != true)) {
                    this.RESOURCE_NAMEField = value;
                    this.RaisePropertyChanged("RESOURCE_NAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ResourceServiceReference.IResourceService")]
    public interface IResourceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetDefaults", ReplyAction="http://tempuri.org/IResourceService/GetDefaultsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetDefaults(string db, int requestedOrg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetDefaults", ReplyAction="http://tempuri.org/IResourceService/GetDefaultsResponse")]
        System.IAsyncResult BeginGetDefaults(string db, int requestedOrg, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetDefaults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceListByMachine", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByMachineResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByMachine(string db, string requestedMachine);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceListByMachine", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByMachineResponse")]
        System.IAsyncResult BeginGetResourceListByMachine(string db, string requestedMachine, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByMachine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceHistory", ReplyAction="http://tempuri.org/IResourceService/GetResourceHistoryResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges> GetResourceHistory(string db, string requestedMachine);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceHistory", ReplyAction="http://tempuri.org/IResourceService/GetResourceHistoryResponse")]
        System.IAsyncResult BeginGetResourceHistory(string db, string requestedMachine, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges> EndGetResourceHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceListByID", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByIDResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByID(string db, int requestedResourceID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceListByID", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByIDResponse")]
        System.IAsyncResult BeginGetResourceListByID(string db, int requestedResourceID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceListByResourceName", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByResourceNameResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByResourceName(string db, int requestedOrg, string requestedResource);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceListByResourceName", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByResourceNameResponse")]
        System.IAsyncResult BeginGetResourceListByResourceName(string db, int requestedOrg, string requestedResource, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByResourceName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceListByNestType", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByNestTypeResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByNestType(string db, int requestedOrg, string requestedNestType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceListByNestType", ReplyAction="http://tempuri.org/IResourceService/GetResourceListByNestTypeResponse")]
        System.IAsyncResult BeginGetResourceListByNestType(string db, int requestedOrg, string requestedNestType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByNestType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddNewResource", ReplyAction="http://tempuri.org/IResourceService/AddNewResourceResponse")]
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource AddNewResource(string db, string requestedMachine, int requestedOrg, string requestedResource, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddNewResource", ReplyAction="http://tempuri.org/IResourceService/AddNewResourceResponse")]
        System.IAsyncResult BeginAddNewResource(string db, string requestedMachine, int requestedOrg, string requestedResource, string currentUser, System.AsyncCallback callback, object asyncState);
        
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndAddNewResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddNewResourceFromDefaultName", ReplyAction="http://tempuri.org/IResourceService/AddNewResourceFromDefaultNameResponse")]
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource AddNewResourceFromDefaultName(string db, string requestedMachine, string requestedDefault, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddNewResourceFromDefaultName", ReplyAction="http://tempuri.org/IResourceService/AddNewResourceFromDefaultNameResponse")]
        System.IAsyncResult BeginAddNewResourceFromDefaultName(string db, string requestedMachine, string requestedDefault, string currentUser, System.AsyncCallback callback, object asyncState);
        
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndAddNewResourceFromDefaultName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/ConfigureFromMachineName", ReplyAction="http://tempuri.org/IResourceService/ConfigureFromMachineNameResponse")]
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ConfigureFromMachineName(string db, string requestedFromMachine, string requestedToMachine, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/ConfigureFromMachineName", ReplyAction="http://tempuri.org/IResourceService/ConfigureFromMachineNameResponse")]
        System.IAsyncResult BeginConfigureFromMachineName(string db, string requestedFromMachine, string requestedToMachine, string currentUser, System.AsyncCallback callback, object asyncState);
        
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndConfigureFromMachineName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/ConfigureFromResourceName", ReplyAction="http://tempuri.org/IResourceService/ConfigureFromResourceNameResponse")]
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ConfigureFromResourceName(string db, string requestedFromMachine, string requestedToMachine, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/ConfigureFromResourceName", ReplyAction="http://tempuri.org/IResourceService/ConfigureFromResourceNameResponse")]
        System.IAsyncResult BeginConfigureFromResourceName(string db, string requestedFromMachine, string requestedToMachine, string currentUser, System.AsyncCallback callback, object asyncState);
        
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndConfigureFromResourceName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/ResetResourceByDefaultName", ReplyAction="http://tempuri.org/IResourceService/ResetResourceByDefaultNameResponse")]
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ResetResourceByDefaultName(string db, int requestedResourceID, string requestedDefault, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/ResetResourceByDefaultName", ReplyAction="http://tempuri.org/IResourceService/ResetResourceByDefaultNameResponse")]
        System.IAsyncResult BeginResetResourceByDefaultName(string db, int requestedResourceID, string requestedDefault, string currentUser, System.AsyncCallback callback, object asyncState);
        
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndResetResourceByDefaultName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/ResetResource", ReplyAction="http://tempuri.org/IResourceService/ResetResourceResponse")]
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ResetResource(string db, int requestedResourceID, int requestedOrg, string requestedResource, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/ResetResource", ReplyAction="http://tempuri.org/IResourceService/ResetResourceResponse")]
        System.IAsyncResult BeginResetResource(string db, int requestedResourceID, int requestedOrg, string requestedResource, string currentUser, System.AsyncCallback callback, object asyncState);
        
        Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndResetResource(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetNextImportId", ReplyAction="http://tempuri.org/IResourceService/GetNextImportIdResponse")]
        int GetNextImportId(string database);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetNextImportId", ReplyAction="http://tempuri.org/IResourceService/GetNextImportIdResponse")]
        System.IAsyncResult BeginGetNextImportId(string database, System.AsyncCallback callback, object asyncState);
        
        int EndGetNextImportId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetOperations", ReplyAction="http://tempuri.org/IResourceService/GetOperationsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> GetOperations(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetOperations", ReplyAction="http://tempuri.org/IResourceService/GetOperationsResponse")]
        System.IAsyncResult BeginGetOperations(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> EndGetOperations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetOperationsByOrg", ReplyAction="http://tempuri.org/IResourceService/GetOperationsByOrgResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> GetOperationsByOrg(string db, int requestedOrg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetOperationsByOrg", ReplyAction="http://tempuri.org/IResourceService/GetOperationsByOrgResponse")]
        System.IAsyncResult BeginGetOperationsByOrg(string db, int requestedOrg, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> EndGetOperationsByOrg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceGroups", ReplyAction="http://tempuri.org/IResourceService/GetResourceGroupsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup> GetResourceGroups(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceGroups", ReplyAction="http://tempuri.org/IResourceService/GetResourceGroupsResponse")]
        System.IAsyncResult BeginGetResourceGroups(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup> EndGetResourceGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddResourceDestination", ReplyAction="http://tempuri.org/IResourceService/AddResourceDestinationResponse")]
        void AddResourceDestination(string db, int requestedResourceID, string requestedDestination, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddResourceDestination", ReplyAction="http://tempuri.org/IResourceService/AddResourceDestinationResponse")]
        System.IAsyncResult BeginAddResourceDestination(string db, int requestedResourceID, string requestedDestination, string currentUser, System.AsyncCallback callback, object asyncState);
        
        void EndAddResourceDestination(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddResourceOperation", ReplyAction="http://tempuri.org/IResourceService/AddResourceOperationResponse")]
        void AddResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddResourceOperation", ReplyAction="http://tempuri.org/IResourceService/AddResourceOperationResponse")]
        System.IAsyncResult BeginAddResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, string currentUser, System.AsyncCallback callback, object asyncState);
        
        void EndAddResourceOperation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddResourceOperationNotin", ReplyAction="http://tempuri.org/IResourceService/AddResourceOperationNotinResponse")]
        void AddResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddResourceOperationNotin", ReplyAction="http://tempuri.org/IResourceService/AddResourceOperationNotinResponse")]
        System.IAsyncResult BeginAddResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, string currentUser, System.AsyncCallback callback, object asyncState);
        
        void EndAddResourceOperationNotin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/CreateNewDefault", ReplyAction="http://tempuri.org/IResourceService/CreateNewDefaultResponse")]
        void CreateNewDefault(string db, int requestedOrg, string requestedResource, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/CreateNewDefault", ReplyAction="http://tempuri.org/IResourceService/CreateNewDefaultResponse")]
        System.IAsyncResult BeginCreateNewDefault(string db, int requestedOrg, string requestedResource, string currentUser, System.AsyncCallback callback, object asyncState);
        
        void EndCreateNewDefault(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/RemoveResourceDestination", ReplyAction="http://tempuri.org/IResourceService/RemoveResourceDestinationResponse")]
        void RemoveResourceDestination(string db, int requestedResourceID, string requestedDestination);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/RemoveResourceDestination", ReplyAction="http://tempuri.org/IResourceService/RemoveResourceDestinationResponse")]
        System.IAsyncResult BeginRemoveResourceDestination(string db, int requestedResourceID, string requestedDestination, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveResourceDestination(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/RemoveResourceOperation", ReplyAction="http://tempuri.org/IResourceService/RemoveResourceOperationResponse")]
        void RemoveResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/RemoveResourceOperation", ReplyAction="http://tempuri.org/IResourceService/RemoveResourceOperationResponse")]
        System.IAsyncResult BeginRemoveResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveResourceOperation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/RemoveResourceOperationNotin", ReplyAction="http://tempuri.org/IResourceService/RemoveResourceOperationNotinResponse")]
        void RemoveResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/RemoveResourceOperationNotin", ReplyAction="http://tempuri.org/IResourceService/RemoveResourceOperationNotinResponse")]
        System.IAsyncResult BeginRemoveResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveResourceOperationNotin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/SaveConfigurationItem", ReplyAction="http://tempuri.org/IResourceService/SaveConfigurationItemResponse")]
        void SaveConfigurationItem(string db, int requestedResourceID, string requestedField, string requestedValue, string currentUser);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/SaveConfigurationItem", ReplyAction="http://tempuri.org/IResourceService/SaveConfigurationItemResponse")]
        System.IAsyncResult BeginSaveConfigurationItem(string db, int requestedResourceID, string requestedField, string requestedValue, string currentUser, System.AsyncCallback callback, object asyncState);
        
        void EndSaveConfigurationItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/InsertResourceChangesHistory", ReplyAction="http://tempuri.org/IResourceService/InsertResourceChangesHistoryResponse")]
        void InsertResourceChangesHistory(string db, string type, string machineName, string lastUpdated, string oldValue, string newValue, string fieldName, string lastUpdateBy);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/InsertResourceChangesHistory", ReplyAction="http://tempuri.org/IResourceService/InsertResourceChangesHistoryResponse")]
        System.IAsyncResult BeginInsertResourceChangesHistory(string db, string type, string machineName, string lastUpdated, string oldValue, string newValue, string fieldName, string lastUpdateBy, System.AsyncCallback callback, object asyncState);
        
        void EndInsertResourceChangesHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/InsertNewNestPost", ReplyAction="http://tempuri.org/IResourceService/InsertNewNestPostResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="intReturn")]
        int InsertNewNestPost(string db, string pPostName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/InsertNewNestPost", ReplyAction="http://tempuri.org/IResourceService/InsertNewNestPostResponse")]
        System.IAsyncResult BeginInsertNewNestPost(string db, string pPostName, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="intReturn")]
        int EndInsertNewNestPost(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddResourceLibDataStagingLocArr", ReplyAction="http://tempuri.org/IResourceService/AddResourceLibDataStagingLocArrResponse")]
        int AddResourceLibDataStagingLocArr(
                    string database, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col7_material, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces, 
                    System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_commit);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddResourceLibDataStagingLocArr", ReplyAction="http://tempuri.org/IResourceService/AddResourceLibDataStagingLocArrResponse")]
        System.IAsyncResult BeginAddResourceLibDataStagingLocArr(
                    string database, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col7_material, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces, 
                    System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_commit, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        int EndAddResourceLibDataStagingLocArr(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/AddResourceLibDataStaging", ReplyAction="http://tempuri.org/IResourceService/AddResourceLibDataStagingResponse")]
        int AddResourceLibDataStaging(string db, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/AddResourceLibDataStaging", ReplyAction="http://tempuri.org/IResourceService/AddResourceLibDataStagingResponse")]
        System.IAsyncResult BeginAddResourceLibDataStaging(string db, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData, System.AsyncCallback callback, object asyncState);
        
        int EndAddResourceLibDataStaging(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/ProcessOptiImport", ReplyAction="http://tempuri.org/IResourceService/ProcessOptiImportResponse")]
        int ProcessOptiImport(string database, int iImportId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/ProcessOptiImport", ReplyAction="http://tempuri.org/IResourceService/ProcessOptiImportResponse")]
        System.IAsyncResult BeginProcessOptiImport(string database, int iImportId, System.AsyncCallback callback, object asyncState);
        
        int EndProcessOptiImport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/ProcessCancelImport", ReplyAction="http://tempuri.org/IResourceService/ProcessCancelImportResponse")]
        int ProcessCancelImport(string database, int iImportId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/ProcessCancelImport", ReplyAction="http://tempuri.org/IResourceService/ProcessCancelImportResponse")]
        System.IAsyncResult BeginProcessCancelImport(string database, int iImportId, System.AsyncCallback callback, object asyncState);
        
        int EndProcessCancelImport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetMachineList", ReplyAction="http://tempuri.org/IResourceService/GetMachineListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> GetMachineList(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetMachineList", ReplyAction="http://tempuri.org/IResourceService/GetMachineListResponse")]
        System.IAsyncResult BeginGetMachineList(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> EndGetMachineList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetMachineListByOrg", ReplyAction="http://tempuri.org/IResourceService/GetMachineListByOrgResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> GetMachineListByOrg(string db, int requestedOrg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetMachineListByOrg", ReplyAction="http://tempuri.org/IResourceService/GetMachineListByOrgResponse")]
        System.IAsyncResult BeginGetMachineListByOrg(string db, int requestedOrg, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> EndGetMachineListByOrg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetOrgListAll", ReplyAction="http://tempuri.org/IResourceService/GetOrgListAllResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization> GetOrgListAll(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetOrgListAll", ReplyAction="http://tempuri.org/IResourceService/GetOrgListAllResponse")]
        System.IAsyncResult BeginGetOrgListAll(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization> EndGetOrgListAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetDestinationListAll", ReplyAction="http://tempuri.org/IResourceService/GetDestinationListAllResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination> GetDestinationListAll(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetDestinationListAll", ReplyAction="http://tempuri.org/IResourceService/GetDestinationListAllResponse")]
        System.IAsyncResult BeginGetDestinationListAll(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination> EndGetDestinationListAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetResourceListAll", ReplyAction="http://tempuri.org/IResourceService/GetResourceListAllResponse")]
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk> GetResourceListAll(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetResourceListAll", ReplyAction="http://tempuri.org/IResourceService/GetResourceListAllResponse")]
        System.IAsyncResult BeginGetResourceListAll(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk> EndGetResourceListAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetNestResourcesList", ReplyAction="http://tempuri.org/IResourceService/GetNestResourcesListResponse")]
        System.Collections.ObjectModel.ObservableCollection<string> GetNestResourcesList(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetNestResourcesList", ReplyAction="http://tempuri.org/IResourceService/GetNestResourcesListResponse")]
        System.IAsyncResult BeginGetNestResourcesList(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetNestResourcesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetNestPostsList", ReplyAction="http://tempuri.org/IResourceService/GetNestPostsListResponse")]
        System.Collections.ObjectModel.ObservableCollection<string> GetNestPostsList(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetNestPostsList", ReplyAction="http://tempuri.org/IResourceService/GetNestPostsListResponse")]
        System.IAsyncResult BeginGetNestPostsList(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetNestPostsList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetCategoryListAll", ReplyAction="http://tempuri.org/IResourceService/GetCategoryListAllResponse")]
        System.Collections.ObjectModel.ObservableCollection<string> GetCategoryListAll(string db);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetCategoryListAll", ReplyAction="http://tempuri.org/IResourceService/GetCategoryListAllResponse")]
        System.IAsyncResult BeginGetCategoryListAll(string db, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetCategoryListAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IResourceService/GetDestinationListByOrg", ReplyAction="http://tempuri.org/IResourceService/GetDestinationListByOrgResponse")]
        System.Collections.ObjectModel.ObservableCollection<string> GetDestinationListByOrg(string db, int requestedOrg);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IResourceService/GetDestinationListByOrg", ReplyAction="http://tempuri.org/IResourceService/GetDestinationListByOrgResponse")]
        System.IAsyncResult BeginGetDestinationListByOrg(string db, int requestedOrg, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetDestinationListByOrg(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IResourceServiceChannel : Powell.Mfg.LibraryWinService.ResourceServiceReference.IResourceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDefaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDefaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceListByMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceListByMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceListByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceListByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceListByResourceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceListByResourceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceListByNestTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceListByNestTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewResourceFromDefaultNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewResourceFromDefaultNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigureFromMachineNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConfigureFromMachineNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigureFromResourceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConfigureFromResourceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetResourceByDefaultNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetResourceByDefaultNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextImportIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextImportIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOperationsByOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOperationsByOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertNewNestPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertNewNestPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddResourceLibDataStagingLocArrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddResourceLibDataStagingLocArrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddResourceLibDataStagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddResourceLibDataStagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessOptiImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessOptiImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessCancelImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessCancelImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMachineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMachineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMachineListByOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMachineListByOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrgListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrgListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDestinationListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDestinationListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResourceListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResourceListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNestResourcesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNestResourcesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNestPostsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNestPostsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryListAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryListAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDestinationListByOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDestinationListByOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResourceServiceClient : System.ServiceModel.ClientBase<Powell.Mfg.LibraryWinService.ResourceServiceReference.IResourceService>, Powell.Mfg.LibraryWinService.ResourceServiceReference.IResourceService {
        
        private BeginOperationDelegate onBeginGetDefaultsDelegate;
        
        private EndOperationDelegate onEndGetDefaultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDefaultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceListByMachineDelegate;
        
        private EndOperationDelegate onEndGetResourceListByMachineDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceListByMachineCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceHistoryDelegate;
        
        private EndOperationDelegate onEndGetResourceHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceListByIDDelegate;
        
        private EndOperationDelegate onEndGetResourceListByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceListByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceListByResourceNameDelegate;
        
        private EndOperationDelegate onEndGetResourceListByResourceNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceListByResourceNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceListByNestTypeDelegate;
        
        private EndOperationDelegate onEndGetResourceListByNestTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceListByNestTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewResourceDelegate;
        
        private EndOperationDelegate onEndAddNewResourceDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewResourceFromDefaultNameDelegate;
        
        private EndOperationDelegate onEndAddNewResourceFromDefaultNameDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewResourceFromDefaultNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginConfigureFromMachineNameDelegate;
        
        private EndOperationDelegate onEndConfigureFromMachineNameDelegate;
        
        private System.Threading.SendOrPostCallback onConfigureFromMachineNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginConfigureFromResourceNameDelegate;
        
        private EndOperationDelegate onEndConfigureFromResourceNameDelegate;
        
        private System.Threading.SendOrPostCallback onConfigureFromResourceNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetResourceByDefaultNameDelegate;
        
        private EndOperationDelegate onEndResetResourceByDefaultNameDelegate;
        
        private System.Threading.SendOrPostCallback onResetResourceByDefaultNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetResourceDelegate;
        
        private EndOperationDelegate onEndResetResourceDelegate;
        
        private System.Threading.SendOrPostCallback onResetResourceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextImportIdDelegate;
        
        private EndOperationDelegate onEndGetNextImportIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextImportIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOperationsDelegate;
        
        private EndOperationDelegate onEndGetOperationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOperationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOperationsByOrgDelegate;
        
        private EndOperationDelegate onEndGetOperationsByOrgDelegate;
        
        private System.Threading.SendOrPostCallback onGetOperationsByOrgCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceGroupsDelegate;
        
        private EndOperationDelegate onEndGetResourceGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResourceDestinationDelegate;
        
        private EndOperationDelegate onEndAddResourceDestinationDelegate;
        
        private System.Threading.SendOrPostCallback onAddResourceDestinationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResourceOperationDelegate;
        
        private EndOperationDelegate onEndAddResourceOperationDelegate;
        
        private System.Threading.SendOrPostCallback onAddResourceOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResourceOperationNotinDelegate;
        
        private EndOperationDelegate onEndAddResourceOperationNotinDelegate;
        
        private System.Threading.SendOrPostCallback onAddResourceOperationNotinCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateNewDefaultDelegate;
        
        private EndOperationDelegate onEndCreateNewDefaultDelegate;
        
        private System.Threading.SendOrPostCallback onCreateNewDefaultCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveResourceDestinationDelegate;
        
        private EndOperationDelegate onEndRemoveResourceDestinationDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveResourceDestinationCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveResourceOperationDelegate;
        
        private EndOperationDelegate onEndRemoveResourceOperationDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveResourceOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveResourceOperationNotinDelegate;
        
        private EndOperationDelegate onEndRemoveResourceOperationNotinDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveResourceOperationNotinCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveConfigurationItemDelegate;
        
        private EndOperationDelegate onEndSaveConfigurationItemDelegate;
        
        private System.Threading.SendOrPostCallback onSaveConfigurationItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertResourceChangesHistoryDelegate;
        
        private EndOperationDelegate onEndInsertResourceChangesHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onInsertResourceChangesHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertNewNestPostDelegate;
        
        private EndOperationDelegate onEndInsertNewNestPostDelegate;
        
        private System.Threading.SendOrPostCallback onInsertNewNestPostCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResourceLibDataStagingLocArrDelegate;
        
        private EndOperationDelegate onEndAddResourceLibDataStagingLocArrDelegate;
        
        private System.Threading.SendOrPostCallback onAddResourceLibDataStagingLocArrCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddResourceLibDataStagingDelegate;
        
        private EndOperationDelegate onEndAddResourceLibDataStagingDelegate;
        
        private System.Threading.SendOrPostCallback onAddResourceLibDataStagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcessOptiImportDelegate;
        
        private EndOperationDelegate onEndProcessOptiImportDelegate;
        
        private System.Threading.SendOrPostCallback onProcessOptiImportCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcessCancelImportDelegate;
        
        private EndOperationDelegate onEndProcessCancelImportDelegate;
        
        private System.Threading.SendOrPostCallback onProcessCancelImportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMachineListDelegate;
        
        private EndOperationDelegate onEndGetMachineListDelegate;
        
        private System.Threading.SendOrPostCallback onGetMachineListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMachineListByOrgDelegate;
        
        private EndOperationDelegate onEndGetMachineListByOrgDelegate;
        
        private System.Threading.SendOrPostCallback onGetMachineListByOrgCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrgListAllDelegate;
        
        private EndOperationDelegate onEndGetOrgListAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrgListAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDestinationListAllDelegate;
        
        private EndOperationDelegate onEndGetDestinationListAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetDestinationListAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResourceListAllDelegate;
        
        private EndOperationDelegate onEndGetResourceListAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetResourceListAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNestResourcesListDelegate;
        
        private EndOperationDelegate onEndGetNestResourcesListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNestResourcesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNestPostsListDelegate;
        
        private EndOperationDelegate onEndGetNestPostsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNestPostsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoryListAllDelegate;
        
        private EndOperationDelegate onEndGetCategoryListAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryListAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDestinationListByOrgDelegate;
        
        private EndOperationDelegate onEndGetDestinationListByOrgDelegate;
        
        private System.Threading.SendOrPostCallback onGetDestinationListByOrgCompletedDelegate;
        
        public ResourceServiceClient() {
        }
        
        public ResourceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ResourceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ResourceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDefaultsCompletedEventArgs> GetDefaultsCompleted;
        
        public event System.EventHandler<GetResourceListByMachineCompletedEventArgs> GetResourceListByMachineCompleted;
        
        public event System.EventHandler<GetResourceHistoryCompletedEventArgs> GetResourceHistoryCompleted;
        
        public event System.EventHandler<GetResourceListByIDCompletedEventArgs> GetResourceListByIDCompleted;
        
        public event System.EventHandler<GetResourceListByResourceNameCompletedEventArgs> GetResourceListByResourceNameCompleted;
        
        public event System.EventHandler<GetResourceListByNestTypeCompletedEventArgs> GetResourceListByNestTypeCompleted;
        
        public event System.EventHandler<AddNewResourceCompletedEventArgs> AddNewResourceCompleted;
        
        public event System.EventHandler<AddNewResourceFromDefaultNameCompletedEventArgs> AddNewResourceFromDefaultNameCompleted;
        
        public event System.EventHandler<ConfigureFromMachineNameCompletedEventArgs> ConfigureFromMachineNameCompleted;
        
        public event System.EventHandler<ConfigureFromResourceNameCompletedEventArgs> ConfigureFromResourceNameCompleted;
        
        public event System.EventHandler<ResetResourceByDefaultNameCompletedEventArgs> ResetResourceByDefaultNameCompleted;
        
        public event System.EventHandler<ResetResourceCompletedEventArgs> ResetResourceCompleted;
        
        public event System.EventHandler<GetNextImportIdCompletedEventArgs> GetNextImportIdCompleted;
        
        public event System.EventHandler<GetOperationsCompletedEventArgs> GetOperationsCompleted;
        
        public event System.EventHandler<GetOperationsByOrgCompletedEventArgs> GetOperationsByOrgCompleted;
        
        public event System.EventHandler<GetResourceGroupsCompletedEventArgs> GetResourceGroupsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddResourceDestinationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddResourceOperationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddResourceOperationNotinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateNewDefaultCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveResourceDestinationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveResourceOperationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveResourceOperationNotinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveConfigurationItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertResourceChangesHistoryCompleted;
        
        public event System.EventHandler<InsertNewNestPostCompletedEventArgs> InsertNewNestPostCompleted;
        
        public event System.EventHandler<AddResourceLibDataStagingLocArrCompletedEventArgs> AddResourceLibDataStagingLocArrCompleted;
        
        public event System.EventHandler<AddResourceLibDataStagingCompletedEventArgs> AddResourceLibDataStagingCompleted;
        
        public event System.EventHandler<ProcessOptiImportCompletedEventArgs> ProcessOptiImportCompleted;
        
        public event System.EventHandler<ProcessCancelImportCompletedEventArgs> ProcessCancelImportCompleted;
        
        public event System.EventHandler<GetMachineListCompletedEventArgs> GetMachineListCompleted;
        
        public event System.EventHandler<GetMachineListByOrgCompletedEventArgs> GetMachineListByOrgCompleted;
        
        public event System.EventHandler<GetOrgListAllCompletedEventArgs> GetOrgListAllCompleted;
        
        public event System.EventHandler<GetDestinationListAllCompletedEventArgs> GetDestinationListAllCompleted;
        
        public event System.EventHandler<GetResourceListAllCompletedEventArgs> GetResourceListAllCompleted;
        
        public event System.EventHandler<GetNestResourcesListCompletedEventArgs> GetNestResourcesListCompleted;
        
        public event System.EventHandler<GetNestPostsListCompletedEventArgs> GetNestPostsListCompleted;
        
        public event System.EventHandler<GetCategoryListAllCompletedEventArgs> GetCategoryListAllCompleted;
        
        public event System.EventHandler<GetDestinationListByOrgCompletedEventArgs> GetDestinationListByOrgCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetDefaults(string db, int requestedOrg) {
            return base.Channel.GetDefaults(db, requestedOrg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDefaults(string db, int requestedOrg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDefaults(db, requestedOrg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetDefaults(System.IAsyncResult result) {
            return base.Channel.EndGetDefaults(result);
        }
        
        private System.IAsyncResult OnBeginGetDefaults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            return this.BeginGetDefaults(db, requestedOrg, callback, asyncState);
        }
        
        private object[] OnEndGetDefaults(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> retVal = this.EndGetDefaults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDefaultsCompleted(object state) {
            if ((this.GetDefaultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDefaultsCompleted(this, new GetDefaultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDefaultsAsync(string db, int requestedOrg) {
            this.GetDefaultsAsync(db, requestedOrg, null);
        }
        
        public void GetDefaultsAsync(string db, int requestedOrg, object userState) {
            if ((this.onBeginGetDefaultsDelegate == null)) {
                this.onBeginGetDefaultsDelegate = new BeginOperationDelegate(this.OnBeginGetDefaults);
            }
            if ((this.onEndGetDefaultsDelegate == null)) {
                this.onEndGetDefaultsDelegate = new EndOperationDelegate(this.OnEndGetDefaults);
            }
            if ((this.onGetDefaultsCompletedDelegate == null)) {
                this.onGetDefaultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDefaultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDefaultsDelegate, new object[] {
                        db,
                        requestedOrg}, this.onEndGetDefaultsDelegate, this.onGetDefaultsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByMachine(string db, string requestedMachine) {
            return base.Channel.GetResourceListByMachine(db, requestedMachine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceListByMachine(string db, string requestedMachine, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceListByMachine(db, requestedMachine, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByMachine(System.IAsyncResult result) {
            return base.Channel.EndGetResourceListByMachine(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceListByMachine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string requestedMachine = ((string)(inValues[1]));
            return this.BeginGetResourceListByMachine(db, requestedMachine, callback, asyncState);
        }
        
        private object[] OnEndGetResourceListByMachine(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> retVal = this.EndGetResourceListByMachine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceListByMachineCompleted(object state) {
            if ((this.GetResourceListByMachineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceListByMachineCompleted(this, new GetResourceListByMachineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceListByMachineAsync(string db, string requestedMachine) {
            this.GetResourceListByMachineAsync(db, requestedMachine, null);
        }
        
        public void GetResourceListByMachineAsync(string db, string requestedMachine, object userState) {
            if ((this.onBeginGetResourceListByMachineDelegate == null)) {
                this.onBeginGetResourceListByMachineDelegate = new BeginOperationDelegate(this.OnBeginGetResourceListByMachine);
            }
            if ((this.onEndGetResourceListByMachineDelegate == null)) {
                this.onEndGetResourceListByMachineDelegate = new EndOperationDelegate(this.OnEndGetResourceListByMachine);
            }
            if ((this.onGetResourceListByMachineCompletedDelegate == null)) {
                this.onGetResourceListByMachineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceListByMachineCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceListByMachineDelegate, new object[] {
                        db,
                        requestedMachine}, this.onEndGetResourceListByMachineDelegate, this.onGetResourceListByMachineCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges> GetResourceHistory(string db, string requestedMachine) {
            return base.Channel.GetResourceHistory(db, requestedMachine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceHistory(string db, string requestedMachine, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceHistory(db, requestedMachine, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges> EndGetResourceHistory(System.IAsyncResult result) {
            return base.Channel.EndGetResourceHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string requestedMachine = ((string)(inValues[1]));
            return this.BeginGetResourceHistory(db, requestedMachine, callback, asyncState);
        }
        
        private object[] OnEndGetResourceHistory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChanges> retVal = this.EndGetResourceHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceHistoryCompleted(object state) {
            if ((this.GetResourceHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceHistoryCompleted(this, new GetResourceHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceHistoryAsync(string db, string requestedMachine) {
            this.GetResourceHistoryAsync(db, requestedMachine, null);
        }
        
        public void GetResourceHistoryAsync(string db, string requestedMachine, object userState) {
            if ((this.onBeginGetResourceHistoryDelegate == null)) {
                this.onBeginGetResourceHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetResourceHistory);
            }
            if ((this.onEndGetResourceHistoryDelegate == null)) {
                this.onEndGetResourceHistoryDelegate = new EndOperationDelegate(this.OnEndGetResourceHistory);
            }
            if ((this.onGetResourceHistoryCompletedDelegate == null)) {
                this.onGetResourceHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceHistoryDelegate, new object[] {
                        db,
                        requestedMachine}, this.onEndGetResourceHistoryDelegate, this.onGetResourceHistoryCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByID(string db, int requestedResourceID) {
            return base.Channel.GetResourceListByID(db, requestedResourceID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceListByID(string db, int requestedResourceID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceListByID(db, requestedResourceID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByID(System.IAsyncResult result) {
            return base.Channel.EndGetResourceListByID(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceListByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            return this.BeginGetResourceListByID(db, requestedResourceID, callback, asyncState);
        }
        
        private object[] OnEndGetResourceListByID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> retVal = this.EndGetResourceListByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceListByIDCompleted(object state) {
            if ((this.GetResourceListByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceListByIDCompleted(this, new GetResourceListByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceListByIDAsync(string db, int requestedResourceID) {
            this.GetResourceListByIDAsync(db, requestedResourceID, null);
        }
        
        public void GetResourceListByIDAsync(string db, int requestedResourceID, object userState) {
            if ((this.onBeginGetResourceListByIDDelegate == null)) {
                this.onBeginGetResourceListByIDDelegate = new BeginOperationDelegate(this.OnBeginGetResourceListByID);
            }
            if ((this.onEndGetResourceListByIDDelegate == null)) {
                this.onEndGetResourceListByIDDelegate = new EndOperationDelegate(this.OnEndGetResourceListByID);
            }
            if ((this.onGetResourceListByIDCompletedDelegate == null)) {
                this.onGetResourceListByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceListByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceListByIDDelegate, new object[] {
                        db,
                        requestedResourceID}, this.onEndGetResourceListByIDDelegate, this.onGetResourceListByIDCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByResourceName(string db, int requestedOrg, string requestedResource) {
            return base.Channel.GetResourceListByResourceName(db, requestedOrg, requestedResource);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceListByResourceName(string db, int requestedOrg, string requestedResource, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceListByResourceName(db, requestedOrg, requestedResource, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByResourceName(System.IAsyncResult result) {
            return base.Channel.EndGetResourceListByResourceName(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceListByResourceName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            string requestedResource = ((string)(inValues[2]));
            return this.BeginGetResourceListByResourceName(db, requestedOrg, requestedResource, callback, asyncState);
        }
        
        private object[] OnEndGetResourceListByResourceName(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> retVal = this.EndGetResourceListByResourceName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceListByResourceNameCompleted(object state) {
            if ((this.GetResourceListByResourceNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceListByResourceNameCompleted(this, new GetResourceListByResourceNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceListByResourceNameAsync(string db, int requestedOrg, string requestedResource) {
            this.GetResourceListByResourceNameAsync(db, requestedOrg, requestedResource, null);
        }
        
        public void GetResourceListByResourceNameAsync(string db, int requestedOrg, string requestedResource, object userState) {
            if ((this.onBeginGetResourceListByResourceNameDelegate == null)) {
                this.onBeginGetResourceListByResourceNameDelegate = new BeginOperationDelegate(this.OnBeginGetResourceListByResourceName);
            }
            if ((this.onEndGetResourceListByResourceNameDelegate == null)) {
                this.onEndGetResourceListByResourceNameDelegate = new EndOperationDelegate(this.OnEndGetResourceListByResourceName);
            }
            if ((this.onGetResourceListByResourceNameCompletedDelegate == null)) {
                this.onGetResourceListByResourceNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceListByResourceNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceListByResourceNameDelegate, new object[] {
                        db,
                        requestedOrg,
                        requestedResource}, this.onEndGetResourceListByResourceNameDelegate, this.onGetResourceListByResourceNameCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> GetResourceListByNestType(string db, int requestedOrg, string requestedNestType) {
            return base.Channel.GetResourceListByNestType(db, requestedOrg, requestedNestType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceListByNestType(string db, int requestedOrg, string requestedNestType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceListByNestType(db, requestedOrg, requestedNestType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> EndGetResourceListByNestType(System.IAsyncResult result) {
            return base.Channel.EndGetResourceListByNestType(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceListByNestType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            string requestedNestType = ((string)(inValues[2]));
            return this.BeginGetResourceListByNestType(db, requestedOrg, requestedNestType, callback, asyncState);
        }
        
        private object[] OnEndGetResourceListByNestType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource> retVal = this.EndGetResourceListByNestType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceListByNestTypeCompleted(object state) {
            if ((this.GetResourceListByNestTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceListByNestTypeCompleted(this, new GetResourceListByNestTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceListByNestTypeAsync(string db, int requestedOrg, string requestedNestType) {
            this.GetResourceListByNestTypeAsync(db, requestedOrg, requestedNestType, null);
        }
        
        public void GetResourceListByNestTypeAsync(string db, int requestedOrg, string requestedNestType, object userState) {
            if ((this.onBeginGetResourceListByNestTypeDelegate == null)) {
                this.onBeginGetResourceListByNestTypeDelegate = new BeginOperationDelegate(this.OnBeginGetResourceListByNestType);
            }
            if ((this.onEndGetResourceListByNestTypeDelegate == null)) {
                this.onEndGetResourceListByNestTypeDelegate = new EndOperationDelegate(this.OnEndGetResourceListByNestType);
            }
            if ((this.onGetResourceListByNestTypeCompletedDelegate == null)) {
                this.onGetResourceListByNestTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceListByNestTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceListByNestTypeDelegate, new object[] {
                        db,
                        requestedOrg,
                        requestedNestType}, this.onEndGetResourceListByNestTypeDelegate, this.onGetResourceListByNestTypeCompletedDelegate, userState);
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource AddNewResource(string db, string requestedMachine, int requestedOrg, string requestedResource, string currentUser) {
            return base.Channel.AddNewResource(db, requestedMachine, requestedOrg, requestedResource, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewResource(string db, string requestedMachine, int requestedOrg, string requestedResource, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewResource(db, requestedMachine, requestedOrg, requestedResource, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndAddNewResource(System.IAsyncResult result) {
            return base.Channel.EndAddNewResource(result);
        }
        
        private System.IAsyncResult OnBeginAddNewResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string requestedMachine = ((string)(inValues[1]));
            int requestedOrg = ((int)(inValues[2]));
            string requestedResource = ((string)(inValues[3]));
            string currentUser = ((string)(inValues[4]));
            return this.BeginAddNewResource(db, requestedMachine, requestedOrg, requestedResource, currentUser, callback, asyncState);
        }
        
        private object[] OnEndAddNewResource(System.IAsyncResult result) {
            Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource retVal = this.EndAddNewResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewResourceCompleted(object state) {
            if ((this.AddNewResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewResourceCompleted(this, new AddNewResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewResourceAsync(string db, string requestedMachine, int requestedOrg, string requestedResource, string currentUser) {
            this.AddNewResourceAsync(db, requestedMachine, requestedOrg, requestedResource, currentUser, null);
        }
        
        public void AddNewResourceAsync(string db, string requestedMachine, int requestedOrg, string requestedResource, string currentUser, object userState) {
            if ((this.onBeginAddNewResourceDelegate == null)) {
                this.onBeginAddNewResourceDelegate = new BeginOperationDelegate(this.OnBeginAddNewResource);
            }
            if ((this.onEndAddNewResourceDelegate == null)) {
                this.onEndAddNewResourceDelegate = new EndOperationDelegate(this.OnEndAddNewResource);
            }
            if ((this.onAddNewResourceCompletedDelegate == null)) {
                this.onAddNewResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewResourceCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewResourceDelegate, new object[] {
                        db,
                        requestedMachine,
                        requestedOrg,
                        requestedResource,
                        currentUser}, this.onEndAddNewResourceDelegate, this.onAddNewResourceCompletedDelegate, userState);
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource AddNewResourceFromDefaultName(string db, string requestedMachine, string requestedDefault, string currentUser) {
            return base.Channel.AddNewResourceFromDefaultName(db, requestedMachine, requestedDefault, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddNewResourceFromDefaultName(string db, string requestedMachine, string requestedDefault, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewResourceFromDefaultName(db, requestedMachine, requestedDefault, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndAddNewResourceFromDefaultName(System.IAsyncResult result) {
            return base.Channel.EndAddNewResourceFromDefaultName(result);
        }
        
        private System.IAsyncResult OnBeginAddNewResourceFromDefaultName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string requestedMachine = ((string)(inValues[1]));
            string requestedDefault = ((string)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginAddNewResourceFromDefaultName(db, requestedMachine, requestedDefault, currentUser, callback, asyncState);
        }
        
        private object[] OnEndAddNewResourceFromDefaultName(System.IAsyncResult result) {
            Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource retVal = this.EndAddNewResourceFromDefaultName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewResourceFromDefaultNameCompleted(object state) {
            if ((this.AddNewResourceFromDefaultNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewResourceFromDefaultNameCompleted(this, new AddNewResourceFromDefaultNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewResourceFromDefaultNameAsync(string db, string requestedMachine, string requestedDefault, string currentUser) {
            this.AddNewResourceFromDefaultNameAsync(db, requestedMachine, requestedDefault, currentUser, null);
        }
        
        public void AddNewResourceFromDefaultNameAsync(string db, string requestedMachine, string requestedDefault, string currentUser, object userState) {
            if ((this.onBeginAddNewResourceFromDefaultNameDelegate == null)) {
                this.onBeginAddNewResourceFromDefaultNameDelegate = new BeginOperationDelegate(this.OnBeginAddNewResourceFromDefaultName);
            }
            if ((this.onEndAddNewResourceFromDefaultNameDelegate == null)) {
                this.onEndAddNewResourceFromDefaultNameDelegate = new EndOperationDelegate(this.OnEndAddNewResourceFromDefaultName);
            }
            if ((this.onAddNewResourceFromDefaultNameCompletedDelegate == null)) {
                this.onAddNewResourceFromDefaultNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewResourceFromDefaultNameCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewResourceFromDefaultNameDelegate, new object[] {
                        db,
                        requestedMachine,
                        requestedDefault,
                        currentUser}, this.onEndAddNewResourceFromDefaultNameDelegate, this.onAddNewResourceFromDefaultNameCompletedDelegate, userState);
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ConfigureFromMachineName(string db, string requestedFromMachine, string requestedToMachine, string currentUser) {
            return base.Channel.ConfigureFromMachineName(db, requestedFromMachine, requestedToMachine, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConfigureFromMachineName(string db, string requestedFromMachine, string requestedToMachine, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConfigureFromMachineName(db, requestedFromMachine, requestedToMachine, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndConfigureFromMachineName(System.IAsyncResult result) {
            return base.Channel.EndConfigureFromMachineName(result);
        }
        
        private System.IAsyncResult OnBeginConfigureFromMachineName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string requestedFromMachine = ((string)(inValues[1]));
            string requestedToMachine = ((string)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginConfigureFromMachineName(db, requestedFromMachine, requestedToMachine, currentUser, callback, asyncState);
        }
        
        private object[] OnEndConfigureFromMachineName(System.IAsyncResult result) {
            Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource retVal = this.EndConfigureFromMachineName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConfigureFromMachineNameCompleted(object state) {
            if ((this.ConfigureFromMachineNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConfigureFromMachineNameCompleted(this, new ConfigureFromMachineNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConfigureFromMachineNameAsync(string db, string requestedFromMachine, string requestedToMachine, string currentUser) {
            this.ConfigureFromMachineNameAsync(db, requestedFromMachine, requestedToMachine, currentUser, null);
        }
        
        public void ConfigureFromMachineNameAsync(string db, string requestedFromMachine, string requestedToMachine, string currentUser, object userState) {
            if ((this.onBeginConfigureFromMachineNameDelegate == null)) {
                this.onBeginConfigureFromMachineNameDelegate = new BeginOperationDelegate(this.OnBeginConfigureFromMachineName);
            }
            if ((this.onEndConfigureFromMachineNameDelegate == null)) {
                this.onEndConfigureFromMachineNameDelegate = new EndOperationDelegate(this.OnEndConfigureFromMachineName);
            }
            if ((this.onConfigureFromMachineNameCompletedDelegate == null)) {
                this.onConfigureFromMachineNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConfigureFromMachineNameCompleted);
            }
            base.InvokeAsync(this.onBeginConfigureFromMachineNameDelegate, new object[] {
                        db,
                        requestedFromMachine,
                        requestedToMachine,
                        currentUser}, this.onEndConfigureFromMachineNameDelegate, this.onConfigureFromMachineNameCompletedDelegate, userState);
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ConfigureFromResourceName(string db, string requestedFromMachine, string requestedToMachine, string currentUser) {
            return base.Channel.ConfigureFromResourceName(db, requestedFromMachine, requestedToMachine, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConfigureFromResourceName(string db, string requestedFromMachine, string requestedToMachine, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConfigureFromResourceName(db, requestedFromMachine, requestedToMachine, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndConfigureFromResourceName(System.IAsyncResult result) {
            return base.Channel.EndConfigureFromResourceName(result);
        }
        
        private System.IAsyncResult OnBeginConfigureFromResourceName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string requestedFromMachine = ((string)(inValues[1]));
            string requestedToMachine = ((string)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginConfigureFromResourceName(db, requestedFromMachine, requestedToMachine, currentUser, callback, asyncState);
        }
        
        private object[] OnEndConfigureFromResourceName(System.IAsyncResult result) {
            Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource retVal = this.EndConfigureFromResourceName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConfigureFromResourceNameCompleted(object state) {
            if ((this.ConfigureFromResourceNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConfigureFromResourceNameCompleted(this, new ConfigureFromResourceNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConfigureFromResourceNameAsync(string db, string requestedFromMachine, string requestedToMachine, string currentUser) {
            this.ConfigureFromResourceNameAsync(db, requestedFromMachine, requestedToMachine, currentUser, null);
        }
        
        public void ConfigureFromResourceNameAsync(string db, string requestedFromMachine, string requestedToMachine, string currentUser, object userState) {
            if ((this.onBeginConfigureFromResourceNameDelegate == null)) {
                this.onBeginConfigureFromResourceNameDelegate = new BeginOperationDelegate(this.OnBeginConfigureFromResourceName);
            }
            if ((this.onEndConfigureFromResourceNameDelegate == null)) {
                this.onEndConfigureFromResourceNameDelegate = new EndOperationDelegate(this.OnEndConfigureFromResourceName);
            }
            if ((this.onConfigureFromResourceNameCompletedDelegate == null)) {
                this.onConfigureFromResourceNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConfigureFromResourceNameCompleted);
            }
            base.InvokeAsync(this.onBeginConfigureFromResourceNameDelegate, new object[] {
                        db,
                        requestedFromMachine,
                        requestedToMachine,
                        currentUser}, this.onEndConfigureFromResourceNameDelegate, this.onConfigureFromResourceNameCompletedDelegate, userState);
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ResetResourceByDefaultName(string db, int requestedResourceID, string requestedDefault, string currentUser) {
            return base.Channel.ResetResourceByDefaultName(db, requestedResourceID, requestedDefault, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetResourceByDefaultName(string db, int requestedResourceID, string requestedDefault, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetResourceByDefaultName(db, requestedResourceID, requestedDefault, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndResetResourceByDefaultName(System.IAsyncResult result) {
            return base.Channel.EndResetResourceByDefaultName(result);
        }
        
        private System.IAsyncResult OnBeginResetResourceByDefaultName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            string requestedDefault = ((string)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginResetResourceByDefaultName(db, requestedResourceID, requestedDefault, currentUser, callback, asyncState);
        }
        
        private object[] OnEndResetResourceByDefaultName(System.IAsyncResult result) {
            Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource retVal = this.EndResetResourceByDefaultName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetResourceByDefaultNameCompleted(object state) {
            if ((this.ResetResourceByDefaultNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetResourceByDefaultNameCompleted(this, new ResetResourceByDefaultNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetResourceByDefaultNameAsync(string db, int requestedResourceID, string requestedDefault, string currentUser) {
            this.ResetResourceByDefaultNameAsync(db, requestedResourceID, requestedDefault, currentUser, null);
        }
        
        public void ResetResourceByDefaultNameAsync(string db, int requestedResourceID, string requestedDefault, string currentUser, object userState) {
            if ((this.onBeginResetResourceByDefaultNameDelegate == null)) {
                this.onBeginResetResourceByDefaultNameDelegate = new BeginOperationDelegate(this.OnBeginResetResourceByDefaultName);
            }
            if ((this.onEndResetResourceByDefaultNameDelegate == null)) {
                this.onEndResetResourceByDefaultNameDelegate = new EndOperationDelegate(this.OnEndResetResourceByDefaultName);
            }
            if ((this.onResetResourceByDefaultNameCompletedDelegate == null)) {
                this.onResetResourceByDefaultNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetResourceByDefaultNameCompleted);
            }
            base.InvokeAsync(this.onBeginResetResourceByDefaultNameDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedDefault,
                        currentUser}, this.onEndResetResourceByDefaultNameDelegate, this.onResetResourceByDefaultNameCompletedDelegate, userState);
        }
        
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource ResetResource(string db, int requestedResourceID, int requestedOrg, string requestedResource, string currentUser) {
            return base.Channel.ResetResource(db, requestedResourceID, requestedOrg, requestedResource, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetResource(string db, int requestedResourceID, int requestedOrg, string requestedResource, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetResource(db, requestedResourceID, requestedOrg, requestedResource, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource EndResetResource(System.IAsyncResult result) {
            return base.Channel.EndResetResource(result);
        }
        
        private System.IAsyncResult OnBeginResetResource(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            int requestedOrg = ((int)(inValues[2]));
            string requestedResource = ((string)(inValues[3]));
            string currentUser = ((string)(inValues[4]));
            return this.BeginResetResource(db, requestedResourceID, requestedOrg, requestedResource, currentUser, callback, asyncState);
        }
        
        private object[] OnEndResetResource(System.IAsyncResult result) {
            Powell.Mfg.LibraryWinService.ResourceServiceReference.Resource retVal = this.EndResetResource(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetResourceCompleted(object state) {
            if ((this.ResetResourceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetResourceCompleted(this, new ResetResourceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetResourceAsync(string db, int requestedResourceID, int requestedOrg, string requestedResource, string currentUser) {
            this.ResetResourceAsync(db, requestedResourceID, requestedOrg, requestedResource, currentUser, null);
        }
        
        public void ResetResourceAsync(string db, int requestedResourceID, int requestedOrg, string requestedResource, string currentUser, object userState) {
            if ((this.onBeginResetResourceDelegate == null)) {
                this.onBeginResetResourceDelegate = new BeginOperationDelegate(this.OnBeginResetResource);
            }
            if ((this.onEndResetResourceDelegate == null)) {
                this.onEndResetResourceDelegate = new EndOperationDelegate(this.OnEndResetResource);
            }
            if ((this.onResetResourceCompletedDelegate == null)) {
                this.onResetResourceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetResourceCompleted);
            }
            base.InvokeAsync(this.onBeginResetResourceDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedOrg,
                        requestedResource,
                        currentUser}, this.onEndResetResourceDelegate, this.onResetResourceCompletedDelegate, userState);
        }
        
        public int GetNextImportId(string database) {
            return base.Channel.GetNextImportId(database);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNextImportId(string database, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextImportId(database, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetNextImportId(System.IAsyncResult result) {
            return base.Channel.EndGetNextImportId(result);
        }
        
        private System.IAsyncResult OnBeginGetNextImportId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string database = ((string)(inValues[0]));
            return this.BeginGetNextImportId(database, callback, asyncState);
        }
        
        private object[] OnEndGetNextImportId(System.IAsyncResult result) {
            int retVal = this.EndGetNextImportId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextImportIdCompleted(object state) {
            if ((this.GetNextImportIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextImportIdCompleted(this, new GetNextImportIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextImportIdAsync(string database) {
            this.GetNextImportIdAsync(database, null);
        }
        
        public void GetNextImportIdAsync(string database, object userState) {
            if ((this.onBeginGetNextImportIdDelegate == null)) {
                this.onBeginGetNextImportIdDelegate = new BeginOperationDelegate(this.OnBeginGetNextImportId);
            }
            if ((this.onEndGetNextImportIdDelegate == null)) {
                this.onEndGetNextImportIdDelegate = new EndOperationDelegate(this.OnEndGetNextImportId);
            }
            if ((this.onGetNextImportIdCompletedDelegate == null)) {
                this.onGetNextImportIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextImportIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextImportIdDelegate, new object[] {
                        database}, this.onEndGetNextImportIdDelegate, this.onGetNextImportIdCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> GetOperations(string db) {
            return base.Channel.GetOperations(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOperations(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOperations(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> EndGetOperations(System.IAsyncResult result) {
            return base.Channel.EndGetOperations(result);
        }
        
        private System.IAsyncResult OnBeginGetOperations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetOperations(db, callback, asyncState);
        }
        
        private object[] OnEndGetOperations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> retVal = this.EndGetOperations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOperationsCompleted(object state) {
            if ((this.GetOperationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOperationsCompleted(this, new GetOperationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOperationsAsync(string db) {
            this.GetOperationsAsync(db, null);
        }
        
        public void GetOperationsAsync(string db, object userState) {
            if ((this.onBeginGetOperationsDelegate == null)) {
                this.onBeginGetOperationsDelegate = new BeginOperationDelegate(this.OnBeginGetOperations);
            }
            if ((this.onEndGetOperationsDelegate == null)) {
                this.onEndGetOperationsDelegate = new EndOperationDelegate(this.OnEndGetOperations);
            }
            if ((this.onGetOperationsCompletedDelegate == null)) {
                this.onGetOperationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOperationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOperationsDelegate, new object[] {
                        db}, this.onEndGetOperationsDelegate, this.onGetOperationsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> GetOperationsByOrg(string db, int requestedOrg) {
            return base.Channel.GetOperationsByOrg(db, requestedOrg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOperationsByOrg(string db, int requestedOrg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOperationsByOrg(db, requestedOrg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> EndGetOperationsByOrg(System.IAsyncResult result) {
            return base.Channel.EndGetOperationsByOrg(result);
        }
        
        private System.IAsyncResult OnBeginGetOperationsByOrg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            return this.BeginGetOperationsByOrg(db, requestedOrg, callback, asyncState);
        }
        
        private object[] OnEndGetOperationsByOrg(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation> retVal = this.EndGetOperationsByOrg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOperationsByOrgCompleted(object state) {
            if ((this.GetOperationsByOrgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOperationsByOrgCompleted(this, new GetOperationsByOrgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOperationsByOrgAsync(string db, int requestedOrg) {
            this.GetOperationsByOrgAsync(db, requestedOrg, null);
        }
        
        public void GetOperationsByOrgAsync(string db, int requestedOrg, object userState) {
            if ((this.onBeginGetOperationsByOrgDelegate == null)) {
                this.onBeginGetOperationsByOrgDelegate = new BeginOperationDelegate(this.OnBeginGetOperationsByOrg);
            }
            if ((this.onEndGetOperationsByOrgDelegate == null)) {
                this.onEndGetOperationsByOrgDelegate = new EndOperationDelegate(this.OnEndGetOperationsByOrg);
            }
            if ((this.onGetOperationsByOrgCompletedDelegate == null)) {
                this.onGetOperationsByOrgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOperationsByOrgCompleted);
            }
            base.InvokeAsync(this.onBeginGetOperationsByOrgDelegate, new object[] {
                        db,
                        requestedOrg}, this.onEndGetOperationsByOrgDelegate, this.onGetOperationsByOrgCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup> GetResourceGroups(string db) {
            return base.Channel.GetResourceGroups(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceGroups(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceGroups(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup> EndGetResourceGroups(System.IAsyncResult result) {
            return base.Channel.EndGetResourceGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetResourceGroups(db, callback, asyncState);
        }
        
        private object[] OnEndGetResourceGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceGroup> retVal = this.EndGetResourceGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceGroupsCompleted(object state) {
            if ((this.GetResourceGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceGroupsCompleted(this, new GetResourceGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceGroupsAsync(string db) {
            this.GetResourceGroupsAsync(db, null);
        }
        
        public void GetResourceGroupsAsync(string db, object userState) {
            if ((this.onBeginGetResourceGroupsDelegate == null)) {
                this.onBeginGetResourceGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetResourceGroups);
            }
            if ((this.onEndGetResourceGroupsDelegate == null)) {
                this.onEndGetResourceGroupsDelegate = new EndOperationDelegate(this.OnEndGetResourceGroups);
            }
            if ((this.onGetResourceGroupsCompletedDelegate == null)) {
                this.onGetResourceGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceGroupsDelegate, new object[] {
                        db}, this.onEndGetResourceGroupsDelegate, this.onGetResourceGroupsCompletedDelegate, userState);
        }
        
        public void AddResourceDestination(string db, int requestedResourceID, string requestedDestination, string currentUser) {
            base.Channel.AddResourceDestination(db, requestedResourceID, requestedDestination, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResourceDestination(string db, int requestedResourceID, string requestedDestination, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResourceDestination(db, requestedResourceID, requestedDestination, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddResourceDestination(System.IAsyncResult result) {
            base.Channel.EndAddResourceDestination(result);
        }
        
        private System.IAsyncResult OnBeginAddResourceDestination(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            string requestedDestination = ((string)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginAddResourceDestination(db, requestedResourceID, requestedDestination, currentUser, callback, asyncState);
        }
        
        private object[] OnEndAddResourceDestination(System.IAsyncResult result) {
            this.EndAddResourceDestination(result);
            return null;
        }
        
        private void OnAddResourceDestinationCompleted(object state) {
            if ((this.AddResourceDestinationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResourceDestinationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResourceDestinationAsync(string db, int requestedResourceID, string requestedDestination, string currentUser) {
            this.AddResourceDestinationAsync(db, requestedResourceID, requestedDestination, currentUser, null);
        }
        
        public void AddResourceDestinationAsync(string db, int requestedResourceID, string requestedDestination, string currentUser, object userState) {
            if ((this.onBeginAddResourceDestinationDelegate == null)) {
                this.onBeginAddResourceDestinationDelegate = new BeginOperationDelegate(this.OnBeginAddResourceDestination);
            }
            if ((this.onEndAddResourceDestinationDelegate == null)) {
                this.onEndAddResourceDestinationDelegate = new EndOperationDelegate(this.OnEndAddResourceDestination);
            }
            if ((this.onAddResourceDestinationCompletedDelegate == null)) {
                this.onAddResourceDestinationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResourceDestinationCompleted);
            }
            base.InvokeAsync(this.onBeginAddResourceDestinationDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedDestination,
                        currentUser}, this.onEndAddResourceDestinationDelegate, this.onAddResourceDestinationCompletedDelegate, userState);
        }
        
        public void AddResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, string currentUser) {
            base.Channel.AddResourceOperation(db, requestedResourceID, requestedOperation, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResourceOperation(db, requestedResourceID, requestedOperation, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddResourceOperation(System.IAsyncResult result) {
            base.Channel.EndAddResourceOperation(result);
        }
        
        private System.IAsyncResult OnBeginAddResourceOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation = ((Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginAddResourceOperation(db, requestedResourceID, requestedOperation, currentUser, callback, asyncState);
        }
        
        private object[] OnEndAddResourceOperation(System.IAsyncResult result) {
            this.EndAddResourceOperation(result);
            return null;
        }
        
        private void OnAddResourceOperationCompleted(object state) {
            if ((this.AddResourceOperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResourceOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResourceOperationAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, string currentUser) {
            this.AddResourceOperationAsync(db, requestedResourceID, requestedOperation, currentUser, null);
        }
        
        public void AddResourceOperationAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, string currentUser, object userState) {
            if ((this.onBeginAddResourceOperationDelegate == null)) {
                this.onBeginAddResourceOperationDelegate = new BeginOperationDelegate(this.OnBeginAddResourceOperation);
            }
            if ((this.onEndAddResourceOperationDelegate == null)) {
                this.onEndAddResourceOperationDelegate = new EndOperationDelegate(this.OnEndAddResourceOperation);
            }
            if ((this.onAddResourceOperationCompletedDelegate == null)) {
                this.onAddResourceOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResourceOperationCompleted);
            }
            base.InvokeAsync(this.onBeginAddResourceOperationDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedOperation,
                        currentUser}, this.onEndAddResourceOperationDelegate, this.onAddResourceOperationCompletedDelegate, userState);
        }
        
        public void AddResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, string currentUser) {
            base.Channel.AddResourceOperationNotin(db, requestedResourceID, requestedOperation, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResourceOperationNotin(db, requestedResourceID, requestedOperation, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddResourceOperationNotin(System.IAsyncResult result) {
            base.Channel.EndAddResourceOperationNotin(result);
        }
        
        private System.IAsyncResult OnBeginAddResourceOperationNotin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation = ((Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginAddResourceOperationNotin(db, requestedResourceID, requestedOperation, currentUser, callback, asyncState);
        }
        
        private object[] OnEndAddResourceOperationNotin(System.IAsyncResult result) {
            this.EndAddResourceOperationNotin(result);
            return null;
        }
        
        private void OnAddResourceOperationNotinCompleted(object state) {
            if ((this.AddResourceOperationNotinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResourceOperationNotinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResourceOperationNotinAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, string currentUser) {
            this.AddResourceOperationNotinAsync(db, requestedResourceID, requestedOperation, currentUser, null);
        }
        
        public void AddResourceOperationNotinAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, string currentUser, object userState) {
            if ((this.onBeginAddResourceOperationNotinDelegate == null)) {
                this.onBeginAddResourceOperationNotinDelegate = new BeginOperationDelegate(this.OnBeginAddResourceOperationNotin);
            }
            if ((this.onEndAddResourceOperationNotinDelegate == null)) {
                this.onEndAddResourceOperationNotinDelegate = new EndOperationDelegate(this.OnEndAddResourceOperationNotin);
            }
            if ((this.onAddResourceOperationNotinCompletedDelegate == null)) {
                this.onAddResourceOperationNotinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResourceOperationNotinCompleted);
            }
            base.InvokeAsync(this.onBeginAddResourceOperationNotinDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedOperation,
                        currentUser}, this.onEndAddResourceOperationNotinDelegate, this.onAddResourceOperationNotinCompletedDelegate, userState);
        }
        
        public void CreateNewDefault(string db, int requestedOrg, string requestedResource, string currentUser) {
            base.Channel.CreateNewDefault(db, requestedOrg, requestedResource, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateNewDefault(string db, int requestedOrg, string requestedResource, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNewDefault(db, requestedOrg, requestedResource, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCreateNewDefault(System.IAsyncResult result) {
            base.Channel.EndCreateNewDefault(result);
        }
        
        private System.IAsyncResult OnBeginCreateNewDefault(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            string requestedResource = ((string)(inValues[2]));
            string currentUser = ((string)(inValues[3]));
            return this.BeginCreateNewDefault(db, requestedOrg, requestedResource, currentUser, callback, asyncState);
        }
        
        private object[] OnEndCreateNewDefault(System.IAsyncResult result) {
            this.EndCreateNewDefault(result);
            return null;
        }
        
        private void OnCreateNewDefaultCompleted(object state) {
            if ((this.CreateNewDefaultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNewDefaultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNewDefaultAsync(string db, int requestedOrg, string requestedResource, string currentUser) {
            this.CreateNewDefaultAsync(db, requestedOrg, requestedResource, currentUser, null);
        }
        
        public void CreateNewDefaultAsync(string db, int requestedOrg, string requestedResource, string currentUser, object userState) {
            if ((this.onBeginCreateNewDefaultDelegate == null)) {
                this.onBeginCreateNewDefaultDelegate = new BeginOperationDelegate(this.OnBeginCreateNewDefault);
            }
            if ((this.onEndCreateNewDefaultDelegate == null)) {
                this.onEndCreateNewDefaultDelegate = new EndOperationDelegate(this.OnEndCreateNewDefault);
            }
            if ((this.onCreateNewDefaultCompletedDelegate == null)) {
                this.onCreateNewDefaultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewDefaultCompleted);
            }
            base.InvokeAsync(this.onBeginCreateNewDefaultDelegate, new object[] {
                        db,
                        requestedOrg,
                        requestedResource,
                        currentUser}, this.onEndCreateNewDefaultDelegate, this.onCreateNewDefaultCompletedDelegate, userState);
        }
        
        public void RemoveResourceDestination(string db, int requestedResourceID, string requestedDestination) {
            base.Channel.RemoveResourceDestination(db, requestedResourceID, requestedDestination);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveResourceDestination(string db, int requestedResourceID, string requestedDestination, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveResourceDestination(db, requestedResourceID, requestedDestination, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveResourceDestination(System.IAsyncResult result) {
            base.Channel.EndRemoveResourceDestination(result);
        }
        
        private System.IAsyncResult OnBeginRemoveResourceDestination(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            string requestedDestination = ((string)(inValues[2]));
            return this.BeginRemoveResourceDestination(db, requestedResourceID, requestedDestination, callback, asyncState);
        }
        
        private object[] OnEndRemoveResourceDestination(System.IAsyncResult result) {
            this.EndRemoveResourceDestination(result);
            return null;
        }
        
        private void OnRemoveResourceDestinationCompleted(object state) {
            if ((this.RemoveResourceDestinationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveResourceDestinationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveResourceDestinationAsync(string db, int requestedResourceID, string requestedDestination) {
            this.RemoveResourceDestinationAsync(db, requestedResourceID, requestedDestination, null);
        }
        
        public void RemoveResourceDestinationAsync(string db, int requestedResourceID, string requestedDestination, object userState) {
            if ((this.onBeginRemoveResourceDestinationDelegate == null)) {
                this.onBeginRemoveResourceDestinationDelegate = new BeginOperationDelegate(this.OnBeginRemoveResourceDestination);
            }
            if ((this.onEndRemoveResourceDestinationDelegate == null)) {
                this.onEndRemoveResourceDestinationDelegate = new EndOperationDelegate(this.OnEndRemoveResourceDestination);
            }
            if ((this.onRemoveResourceDestinationCompletedDelegate == null)) {
                this.onRemoveResourceDestinationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveResourceDestinationCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveResourceDestinationDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedDestination}, this.onEndRemoveResourceDestinationDelegate, this.onRemoveResourceDestinationCompletedDelegate, userState);
        }
        
        public void RemoveResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation) {
            base.Channel.RemoveResourceOperation(db, requestedResourceID, requestedOperation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveResourceOperation(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveResourceOperation(db, requestedResourceID, requestedOperation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveResourceOperation(System.IAsyncResult result) {
            base.Channel.EndRemoveResourceOperation(result);
        }
        
        private System.IAsyncResult OnBeginRemoveResourceOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation = ((Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation)(inValues[2]));
            return this.BeginRemoveResourceOperation(db, requestedResourceID, requestedOperation, callback, asyncState);
        }
        
        private object[] OnEndRemoveResourceOperation(System.IAsyncResult result) {
            this.EndRemoveResourceOperation(result);
            return null;
        }
        
        private void OnRemoveResourceOperationCompleted(object state) {
            if ((this.RemoveResourceOperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveResourceOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveResourceOperationAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation) {
            this.RemoveResourceOperationAsync(db, requestedResourceID, requestedOperation, null);
        }
        
        public void RemoveResourceOperationAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperation requestedOperation, object userState) {
            if ((this.onBeginRemoveResourceOperationDelegate == null)) {
                this.onBeginRemoveResourceOperationDelegate = new BeginOperationDelegate(this.OnBeginRemoveResourceOperation);
            }
            if ((this.onEndRemoveResourceOperationDelegate == null)) {
                this.onEndRemoveResourceOperationDelegate = new EndOperationDelegate(this.OnEndRemoveResourceOperation);
            }
            if ((this.onRemoveResourceOperationCompletedDelegate == null)) {
                this.onRemoveResourceOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveResourceOperationCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveResourceOperationDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedOperation}, this.onEndRemoveResourceOperationDelegate, this.onRemoveResourceOperationCompletedDelegate, userState);
        }
        
        public void RemoveResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation) {
            base.Channel.RemoveResourceOperationNotin(db, requestedResourceID, requestedOperation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveResourceOperationNotin(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveResourceOperationNotin(db, requestedResourceID, requestedOperation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveResourceOperationNotin(System.IAsyncResult result) {
            base.Channel.EndRemoveResourceOperationNotin(result);
        }
        
        private System.IAsyncResult OnBeginRemoveResourceOperationNotin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation = ((Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN)(inValues[2]));
            return this.BeginRemoveResourceOperationNotin(db, requestedResourceID, requestedOperation, callback, asyncState);
        }
        
        private object[] OnEndRemoveResourceOperationNotin(System.IAsyncResult result) {
            this.EndRemoveResourceOperationNotin(result);
            return null;
        }
        
        private void OnRemoveResourceOperationNotinCompleted(object state) {
            if ((this.RemoveResourceOperationNotinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveResourceOperationNotinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveResourceOperationNotinAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation) {
            this.RemoveResourceOperationNotinAsync(db, requestedResourceID, requestedOperation, null);
        }
        
        public void RemoveResourceOperationNotinAsync(string db, int requestedResourceID, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceOperationNotIN requestedOperation, object userState) {
            if ((this.onBeginRemoveResourceOperationNotinDelegate == null)) {
                this.onBeginRemoveResourceOperationNotinDelegate = new BeginOperationDelegate(this.OnBeginRemoveResourceOperationNotin);
            }
            if ((this.onEndRemoveResourceOperationNotinDelegate == null)) {
                this.onEndRemoveResourceOperationNotinDelegate = new EndOperationDelegate(this.OnEndRemoveResourceOperationNotin);
            }
            if ((this.onRemoveResourceOperationNotinCompletedDelegate == null)) {
                this.onRemoveResourceOperationNotinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveResourceOperationNotinCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveResourceOperationNotinDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedOperation}, this.onEndRemoveResourceOperationNotinDelegate, this.onRemoveResourceOperationNotinCompletedDelegate, userState);
        }
        
        public void SaveConfigurationItem(string db, int requestedResourceID, string requestedField, string requestedValue, string currentUser) {
            base.Channel.SaveConfigurationItem(db, requestedResourceID, requestedField, requestedValue, currentUser);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveConfigurationItem(string db, int requestedResourceID, string requestedField, string requestedValue, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveConfigurationItem(db, requestedResourceID, requestedField, requestedValue, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveConfigurationItem(System.IAsyncResult result) {
            base.Channel.EndSaveConfigurationItem(result);
        }
        
        private System.IAsyncResult OnBeginSaveConfigurationItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedResourceID = ((int)(inValues[1]));
            string requestedField = ((string)(inValues[2]));
            string requestedValue = ((string)(inValues[3]));
            string currentUser = ((string)(inValues[4]));
            return this.BeginSaveConfigurationItem(db, requestedResourceID, requestedField, requestedValue, currentUser, callback, asyncState);
        }
        
        private object[] OnEndSaveConfigurationItem(System.IAsyncResult result) {
            this.EndSaveConfigurationItem(result);
            return null;
        }
        
        private void OnSaveConfigurationItemCompleted(object state) {
            if ((this.SaveConfigurationItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveConfigurationItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveConfigurationItemAsync(string db, int requestedResourceID, string requestedField, string requestedValue, string currentUser) {
            this.SaveConfigurationItemAsync(db, requestedResourceID, requestedField, requestedValue, currentUser, null);
        }
        
        public void SaveConfigurationItemAsync(string db, int requestedResourceID, string requestedField, string requestedValue, string currentUser, object userState) {
            if ((this.onBeginSaveConfigurationItemDelegate == null)) {
                this.onBeginSaveConfigurationItemDelegate = new BeginOperationDelegate(this.OnBeginSaveConfigurationItem);
            }
            if ((this.onEndSaveConfigurationItemDelegate == null)) {
                this.onEndSaveConfigurationItemDelegate = new EndOperationDelegate(this.OnEndSaveConfigurationItem);
            }
            if ((this.onSaveConfigurationItemCompletedDelegate == null)) {
                this.onSaveConfigurationItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveConfigurationItemCompleted);
            }
            base.InvokeAsync(this.onBeginSaveConfigurationItemDelegate, new object[] {
                        db,
                        requestedResourceID,
                        requestedField,
                        requestedValue,
                        currentUser}, this.onEndSaveConfigurationItemDelegate, this.onSaveConfigurationItemCompletedDelegate, userState);
        }
        
        public void InsertResourceChangesHistory(string db, string type, string machineName, string lastUpdated, string oldValue, string newValue, string fieldName, string lastUpdateBy) {
            base.Channel.InsertResourceChangesHistory(db, type, machineName, lastUpdated, oldValue, newValue, fieldName, lastUpdateBy);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertResourceChangesHistory(string db, string type, string machineName, string lastUpdated, string oldValue, string newValue, string fieldName, string lastUpdateBy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertResourceChangesHistory(db, type, machineName, lastUpdated, oldValue, newValue, fieldName, lastUpdateBy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInsertResourceChangesHistory(System.IAsyncResult result) {
            base.Channel.EndInsertResourceChangesHistory(result);
        }
        
        private System.IAsyncResult OnBeginInsertResourceChangesHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string type = ((string)(inValues[1]));
            string machineName = ((string)(inValues[2]));
            string lastUpdated = ((string)(inValues[3]));
            string oldValue = ((string)(inValues[4]));
            string newValue = ((string)(inValues[5]));
            string fieldName = ((string)(inValues[6]));
            string lastUpdateBy = ((string)(inValues[7]));
            return this.BeginInsertResourceChangesHistory(db, type, machineName, lastUpdated, oldValue, newValue, fieldName, lastUpdateBy, callback, asyncState);
        }
        
        private object[] OnEndInsertResourceChangesHistory(System.IAsyncResult result) {
            this.EndInsertResourceChangesHistory(result);
            return null;
        }
        
        private void OnInsertResourceChangesHistoryCompleted(object state) {
            if ((this.InsertResourceChangesHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertResourceChangesHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertResourceChangesHistoryAsync(string db, string type, string machineName, string lastUpdated, string oldValue, string newValue, string fieldName, string lastUpdateBy) {
            this.InsertResourceChangesHistoryAsync(db, type, machineName, lastUpdated, oldValue, newValue, fieldName, lastUpdateBy, null);
        }
        
        public void InsertResourceChangesHistoryAsync(string db, string type, string machineName, string lastUpdated, string oldValue, string newValue, string fieldName, string lastUpdateBy, object userState) {
            if ((this.onBeginInsertResourceChangesHistoryDelegate == null)) {
                this.onBeginInsertResourceChangesHistoryDelegate = new BeginOperationDelegate(this.OnBeginInsertResourceChangesHistory);
            }
            if ((this.onEndInsertResourceChangesHistoryDelegate == null)) {
                this.onEndInsertResourceChangesHistoryDelegate = new EndOperationDelegate(this.OnEndInsertResourceChangesHistory);
            }
            if ((this.onInsertResourceChangesHistoryCompletedDelegate == null)) {
                this.onInsertResourceChangesHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertResourceChangesHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginInsertResourceChangesHistoryDelegate, new object[] {
                        db,
                        type,
                        machineName,
                        lastUpdated,
                        oldValue,
                        newValue,
                        fieldName,
                        lastUpdateBy}, this.onEndInsertResourceChangesHistoryDelegate, this.onInsertResourceChangesHistoryCompletedDelegate, userState);
        }
        
        public int InsertNewNestPost(string db, string pPostName) {
            return base.Channel.InsertNewNestPost(db, pPostName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertNewNestPost(string db, string pPostName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertNewNestPost(db, pPostName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndInsertNewNestPost(System.IAsyncResult result) {
            return base.Channel.EndInsertNewNestPost(result);
        }
        
        private System.IAsyncResult OnBeginInsertNewNestPost(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            string pPostName = ((string)(inValues[1]));
            return this.BeginInsertNewNestPost(db, pPostName, callback, asyncState);
        }
        
        private object[] OnEndInsertNewNestPost(System.IAsyncResult result) {
            int retVal = this.EndInsertNewNestPost(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertNewNestPostCompleted(object state) {
            if ((this.InsertNewNestPostCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertNewNestPostCompleted(this, new InsertNewNestPostCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertNewNestPostAsync(string db, string pPostName) {
            this.InsertNewNestPostAsync(db, pPostName, null);
        }
        
        public void InsertNewNestPostAsync(string db, string pPostName, object userState) {
            if ((this.onBeginInsertNewNestPostDelegate == null)) {
                this.onBeginInsertNewNestPostDelegate = new BeginOperationDelegate(this.OnBeginInsertNewNestPost);
            }
            if ((this.onEndInsertNewNestPostDelegate == null)) {
                this.onEndInsertNewNestPostDelegate = new EndOperationDelegate(this.OnEndInsertNewNestPost);
            }
            if ((this.onInsertNewNestPostCompletedDelegate == null)) {
                this.onInsertNewNestPostCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertNewNestPostCompleted);
            }
            base.InvokeAsync(this.onBeginInsertNewNestPostDelegate, new object[] {
                        db,
                        pPostName}, this.onEndInsertNewNestPostDelegate, this.onInsertNewNestPostCompletedDelegate, userState);
        }
        
        public int AddResourceLibDataStagingLocArr(
                    string database, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col7_material, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces, 
                    System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_commit) {
            return base.Channel.AddResourceLibDataStagingLocArr(database, p_col1_import_id, p_col2_import_status, p_col3_filename, p_col4_logged_by, p_col5_partname, p_col6_revision, p_col7_material, p_col8_resourcename, p_col9_resource_id, p_col10_orgid, p_col11_hits, p_col12_toolchanges, p_col13_pierces, p_col14_toolpath, p_commit);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResourceLibDataStagingLocArr(
                    string database, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col7_material, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces, 
                    System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_commit, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginAddResourceLibDataStagingLocArr(database, p_col1_import_id, p_col2_import_status, p_col3_filename, p_col4_logged_by, p_col5_partname, p_col6_revision, p_col7_material, p_col8_resourcename, p_col9_resource_id, p_col10_orgid, p_col11_hits, p_col12_toolchanges, p_col13_pierces, p_col14_toolpath, p_commit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddResourceLibDataStagingLocArr(System.IAsyncResult result) {
            return base.Channel.EndAddResourceLibDataStagingLocArr(result);
        }
        
        private System.IAsyncResult OnBeginAddResourceLibDataStagingLocArr(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string database = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[5]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[6]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col7_material = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[7]));
            System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[8]));
            System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[9]));
            System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[10]));
            System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[11]));
            System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[12]));
            System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[13]));
            System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath = ((System.Collections.ObjectModel.ObservableCollection<decimal>)(inValues[14]));
            System.Collections.ObjectModel.ObservableCollection<int> p_commit = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[15]));
            return this.BeginAddResourceLibDataStagingLocArr(database, p_col1_import_id, p_col2_import_status, p_col3_filename, p_col4_logged_by, p_col5_partname, p_col6_revision, p_col7_material, p_col8_resourcename, p_col9_resource_id, p_col10_orgid, p_col11_hits, p_col12_toolchanges, p_col13_pierces, p_col14_toolpath, p_commit, callback, asyncState);
        }
        
        private object[] OnEndAddResourceLibDataStagingLocArr(System.IAsyncResult result) {
            int retVal = this.EndAddResourceLibDataStagingLocArr(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddResourceLibDataStagingLocArrCompleted(object state) {
            if ((this.AddResourceLibDataStagingLocArrCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResourceLibDataStagingLocArrCompleted(this, new AddResourceLibDataStagingLocArrCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResourceLibDataStagingLocArrAsync(
                    string database, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col7_material, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces, 
                    System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_commit) {
            this.AddResourceLibDataStagingLocArrAsync(database, p_col1_import_id, p_col2_import_status, p_col3_filename, p_col4_logged_by, p_col5_partname, p_col6_revision, p_col7_material, p_col8_resourcename, p_col9_resource_id, p_col10_orgid, p_col11_hits, p_col12_toolchanges, p_col13_pierces, p_col14_toolpath, p_commit, null);
        }
        
        public void AddResourceLibDataStagingLocArrAsync(
                    string database, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col1_import_id, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col2_import_status, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col3_filename, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col4_logged_by, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col5_partname, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col6_revision, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col7_material, 
                    System.Collections.ObjectModel.ObservableCollection<string> p_col8_resourcename, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col9_resource_id, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col10_orgid, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col11_hits, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col12_toolchanges, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_col13_pierces, 
                    System.Collections.ObjectModel.ObservableCollection<decimal> p_col14_toolpath, 
                    System.Collections.ObjectModel.ObservableCollection<int> p_commit, 
                    object userState) {
            if ((this.onBeginAddResourceLibDataStagingLocArrDelegate == null)) {
                this.onBeginAddResourceLibDataStagingLocArrDelegate = new BeginOperationDelegate(this.OnBeginAddResourceLibDataStagingLocArr);
            }
            if ((this.onEndAddResourceLibDataStagingLocArrDelegate == null)) {
                this.onEndAddResourceLibDataStagingLocArrDelegate = new EndOperationDelegate(this.OnEndAddResourceLibDataStagingLocArr);
            }
            if ((this.onAddResourceLibDataStagingLocArrCompletedDelegate == null)) {
                this.onAddResourceLibDataStagingLocArrCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResourceLibDataStagingLocArrCompleted);
            }
            base.InvokeAsync(this.onBeginAddResourceLibDataStagingLocArrDelegate, new object[] {
                        database,
                        p_col1_import_id,
                        p_col2_import_status,
                        p_col3_filename,
                        p_col4_logged_by,
                        p_col5_partname,
                        p_col6_revision,
                        p_col7_material,
                        p_col8_resourcename,
                        p_col9_resource_id,
                        p_col10_orgid,
                        p_col11_hits,
                        p_col12_toolchanges,
                        p_col13_pierces,
                        p_col14_toolpath,
                        p_commit}, this.onEndAddResourceLibDataStagingLocArrDelegate, this.onAddResourceLibDataStagingLocArrCompletedDelegate, userState);
        }
        
        public int AddResourceLibDataStaging(string db, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData) {
            return base.Channel.AddResourceLibDataStaging(db, stagingData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddResourceLibDataStaging(string db, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddResourceLibDataStaging(db, stagingData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndAddResourceLibDataStaging(System.IAsyncResult result) {
            return base.Channel.EndAddResourceLibDataStaging(result);
        }
        
        private System.IAsyncResult OnBeginAddResourceLibDataStaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData = ((Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary)(inValues[1]));
            return this.BeginAddResourceLibDataStaging(db, stagingData, callback, asyncState);
        }
        
        private object[] OnEndAddResourceLibDataStaging(System.IAsyncResult result) {
            int retVal = this.EndAddResourceLibDataStaging(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddResourceLibDataStagingCompleted(object state) {
            if ((this.AddResourceLibDataStagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddResourceLibDataStagingCompleted(this, new AddResourceLibDataStagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddResourceLibDataStagingAsync(string db, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData) {
            this.AddResourceLibDataStagingAsync(db, stagingData, null);
        }
        
        public void AddResourceLibDataStagingAsync(string db, Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceLibrary stagingData, object userState) {
            if ((this.onBeginAddResourceLibDataStagingDelegate == null)) {
                this.onBeginAddResourceLibDataStagingDelegate = new BeginOperationDelegate(this.OnBeginAddResourceLibDataStaging);
            }
            if ((this.onEndAddResourceLibDataStagingDelegate == null)) {
                this.onEndAddResourceLibDataStagingDelegate = new EndOperationDelegate(this.OnEndAddResourceLibDataStaging);
            }
            if ((this.onAddResourceLibDataStagingCompletedDelegate == null)) {
                this.onAddResourceLibDataStagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddResourceLibDataStagingCompleted);
            }
            base.InvokeAsync(this.onBeginAddResourceLibDataStagingDelegate, new object[] {
                        db,
                        stagingData}, this.onEndAddResourceLibDataStagingDelegate, this.onAddResourceLibDataStagingCompletedDelegate, userState);
        }
        
        public int ProcessOptiImport(string database, int iImportId) {
            return base.Channel.ProcessOptiImport(database, iImportId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginProcessOptiImport(string database, int iImportId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessOptiImport(database, iImportId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndProcessOptiImport(System.IAsyncResult result) {
            return base.Channel.EndProcessOptiImport(result);
        }
        
        private System.IAsyncResult OnBeginProcessOptiImport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string database = ((string)(inValues[0]));
            int iImportId = ((int)(inValues[1]));
            return this.BeginProcessOptiImport(database, iImportId, callback, asyncState);
        }
        
        private object[] OnEndProcessOptiImport(System.IAsyncResult result) {
            int retVal = this.EndProcessOptiImport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessOptiImportCompleted(object state) {
            if ((this.ProcessOptiImportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessOptiImportCompleted(this, new ProcessOptiImportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessOptiImportAsync(string database, int iImportId) {
            this.ProcessOptiImportAsync(database, iImportId, null);
        }
        
        public void ProcessOptiImportAsync(string database, int iImportId, object userState) {
            if ((this.onBeginProcessOptiImportDelegate == null)) {
                this.onBeginProcessOptiImportDelegate = new BeginOperationDelegate(this.OnBeginProcessOptiImport);
            }
            if ((this.onEndProcessOptiImportDelegate == null)) {
                this.onEndProcessOptiImportDelegate = new EndOperationDelegate(this.OnEndProcessOptiImport);
            }
            if ((this.onProcessOptiImportCompletedDelegate == null)) {
                this.onProcessOptiImportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessOptiImportCompleted);
            }
            base.InvokeAsync(this.onBeginProcessOptiImportDelegate, new object[] {
                        database,
                        iImportId}, this.onEndProcessOptiImportDelegate, this.onProcessOptiImportCompletedDelegate, userState);
        }
        
        public int ProcessCancelImport(string database, int iImportId) {
            return base.Channel.ProcessCancelImport(database, iImportId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginProcessCancelImport(string database, int iImportId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessCancelImport(database, iImportId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndProcessCancelImport(System.IAsyncResult result) {
            return base.Channel.EndProcessCancelImport(result);
        }
        
        private System.IAsyncResult OnBeginProcessCancelImport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string database = ((string)(inValues[0]));
            int iImportId = ((int)(inValues[1]));
            return this.BeginProcessCancelImport(database, iImportId, callback, asyncState);
        }
        
        private object[] OnEndProcessCancelImport(System.IAsyncResult result) {
            int retVal = this.EndProcessCancelImport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessCancelImportCompleted(object state) {
            if ((this.ProcessCancelImportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessCancelImportCompleted(this, new ProcessCancelImportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessCancelImportAsync(string database, int iImportId) {
            this.ProcessCancelImportAsync(database, iImportId, null);
        }
        
        public void ProcessCancelImportAsync(string database, int iImportId, object userState) {
            if ((this.onBeginProcessCancelImportDelegate == null)) {
                this.onBeginProcessCancelImportDelegate = new BeginOperationDelegate(this.OnBeginProcessCancelImport);
            }
            if ((this.onEndProcessCancelImportDelegate == null)) {
                this.onEndProcessCancelImportDelegate = new EndOperationDelegate(this.OnEndProcessCancelImport);
            }
            if ((this.onProcessCancelImportCompletedDelegate == null)) {
                this.onProcessCancelImportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessCancelImportCompleted);
            }
            base.InvokeAsync(this.onBeginProcessCancelImportDelegate, new object[] {
                        database,
                        iImportId}, this.onEndProcessCancelImportDelegate, this.onProcessCancelImportCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> GetMachineList(string db) {
            return base.Channel.GetMachineList(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMachineList(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMachineList(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> EndGetMachineList(System.IAsyncResult result) {
            return base.Channel.EndGetMachineList(result);
        }
        
        private System.IAsyncResult OnBeginGetMachineList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetMachineList(db, callback, asyncState);
        }
        
        private object[] OnEndGetMachineList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> retVal = this.EndGetMachineList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMachineListCompleted(object state) {
            if ((this.GetMachineListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMachineListCompleted(this, new GetMachineListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMachineListAsync(string db) {
            this.GetMachineListAsync(db, null);
        }
        
        public void GetMachineListAsync(string db, object userState) {
            if ((this.onBeginGetMachineListDelegate == null)) {
                this.onBeginGetMachineListDelegate = new BeginOperationDelegate(this.OnBeginGetMachineList);
            }
            if ((this.onEndGetMachineListDelegate == null)) {
                this.onEndGetMachineListDelegate = new EndOperationDelegate(this.OnEndGetMachineList);
            }
            if ((this.onGetMachineListCompletedDelegate == null)) {
                this.onGetMachineListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMachineListCompleted);
            }
            base.InvokeAsync(this.onBeginGetMachineListDelegate, new object[] {
                        db}, this.onEndGetMachineListDelegate, this.onGetMachineListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> GetMachineListByOrg(string db, int requestedOrg) {
            return base.Channel.GetMachineListByOrg(db, requestedOrg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMachineListByOrg(string db, int requestedOrg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMachineListByOrg(db, requestedOrg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> EndGetMachineListByOrg(System.IAsyncResult result) {
            return base.Channel.EndGetMachineListByOrg(result);
        }
        
        private System.IAsyncResult OnBeginGetMachineListByOrg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            return this.BeginGetMachineListByOrg(db, requestedOrg, callback, asyncState);
        }
        
        private object[] OnEndGetMachineListByOrg(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.MachineChunk> retVal = this.EndGetMachineListByOrg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMachineListByOrgCompleted(object state) {
            if ((this.GetMachineListByOrgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMachineListByOrgCompleted(this, new GetMachineListByOrgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMachineListByOrgAsync(string db, int requestedOrg) {
            this.GetMachineListByOrgAsync(db, requestedOrg, null);
        }
        
        public void GetMachineListByOrgAsync(string db, int requestedOrg, object userState) {
            if ((this.onBeginGetMachineListByOrgDelegate == null)) {
                this.onBeginGetMachineListByOrgDelegate = new BeginOperationDelegate(this.OnBeginGetMachineListByOrg);
            }
            if ((this.onEndGetMachineListByOrgDelegate == null)) {
                this.onEndGetMachineListByOrgDelegate = new EndOperationDelegate(this.OnEndGetMachineListByOrg);
            }
            if ((this.onGetMachineListByOrgCompletedDelegate == null)) {
                this.onGetMachineListByOrgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMachineListByOrgCompleted);
            }
            base.InvokeAsync(this.onBeginGetMachineListByOrgDelegate, new object[] {
                        db,
                        requestedOrg}, this.onEndGetMachineListByOrgDelegate, this.onGetMachineListByOrgCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization> GetOrgListAll(string db) {
            return base.Channel.GetOrgListAll(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrgListAll(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrgListAll(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization> EndGetOrgListAll(System.IAsyncResult result) {
            return base.Channel.EndGetOrgListAll(result);
        }
        
        private System.IAsyncResult OnBeginGetOrgListAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetOrgListAll(db, callback, asyncState);
        }
        
        private object[] OnEndGetOrgListAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Organization> retVal = this.EndGetOrgListAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrgListAllCompleted(object state) {
            if ((this.GetOrgListAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrgListAllCompleted(this, new GetOrgListAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrgListAllAsync(string db) {
            this.GetOrgListAllAsync(db, null);
        }
        
        public void GetOrgListAllAsync(string db, object userState) {
            if ((this.onBeginGetOrgListAllDelegate == null)) {
                this.onBeginGetOrgListAllDelegate = new BeginOperationDelegate(this.OnBeginGetOrgListAll);
            }
            if ((this.onEndGetOrgListAllDelegate == null)) {
                this.onEndGetOrgListAllDelegate = new EndOperationDelegate(this.OnEndGetOrgListAll);
            }
            if ((this.onGetOrgListAllCompletedDelegate == null)) {
                this.onGetOrgListAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrgListAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrgListAllDelegate, new object[] {
                        db}, this.onEndGetOrgListAllDelegate, this.onGetOrgListAllCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination> GetDestinationListAll(string db) {
            return base.Channel.GetDestinationListAll(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDestinationListAll(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDestinationListAll(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination> EndGetDestinationListAll(System.IAsyncResult result) {
            return base.Channel.EndGetDestinationListAll(result);
        }
        
        private System.IAsyncResult OnBeginGetDestinationListAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetDestinationListAll(db, callback, asyncState);
        }
        
        private object[] OnEndGetDestinationListAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.Destination> retVal = this.EndGetDestinationListAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDestinationListAllCompleted(object state) {
            if ((this.GetDestinationListAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDestinationListAllCompleted(this, new GetDestinationListAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDestinationListAllAsync(string db) {
            this.GetDestinationListAllAsync(db, null);
        }
        
        public void GetDestinationListAllAsync(string db, object userState) {
            if ((this.onBeginGetDestinationListAllDelegate == null)) {
                this.onBeginGetDestinationListAllDelegate = new BeginOperationDelegate(this.OnBeginGetDestinationListAll);
            }
            if ((this.onEndGetDestinationListAllDelegate == null)) {
                this.onEndGetDestinationListAllDelegate = new EndOperationDelegate(this.OnEndGetDestinationListAll);
            }
            if ((this.onGetDestinationListAllCompletedDelegate == null)) {
                this.onGetDestinationListAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDestinationListAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetDestinationListAllDelegate, new object[] {
                        db}, this.onEndGetDestinationListAllDelegate, this.onGetDestinationListAllCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk> GetResourceListAll(string db) {
            return base.Channel.GetResourceListAll(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetResourceListAll(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResourceListAll(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk> EndGetResourceListAll(System.IAsyncResult result) {
            return base.Channel.EndGetResourceListAll(result);
        }
        
        private System.IAsyncResult OnBeginGetResourceListAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetResourceListAll(db, callback, asyncState);
        }
        
        private object[] OnEndGetResourceListAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Powell.Mfg.LibraryWinService.ResourceServiceReference.ResourceChunk> retVal = this.EndGetResourceListAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResourceListAllCompleted(object state) {
            if ((this.GetResourceListAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResourceListAllCompleted(this, new GetResourceListAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResourceListAllAsync(string db) {
            this.GetResourceListAllAsync(db, null);
        }
        
        public void GetResourceListAllAsync(string db, object userState) {
            if ((this.onBeginGetResourceListAllDelegate == null)) {
                this.onBeginGetResourceListAllDelegate = new BeginOperationDelegate(this.OnBeginGetResourceListAll);
            }
            if ((this.onEndGetResourceListAllDelegate == null)) {
                this.onEndGetResourceListAllDelegate = new EndOperationDelegate(this.OnEndGetResourceListAll);
            }
            if ((this.onGetResourceListAllCompletedDelegate == null)) {
                this.onGetResourceListAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResourceListAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetResourceListAllDelegate, new object[] {
                        db}, this.onEndGetResourceListAllDelegate, this.onGetResourceListAllCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> GetNestResourcesList(string db) {
            return base.Channel.GetNestResourcesList(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNestResourcesList(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNestResourcesList(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<string> EndGetNestResourcesList(System.IAsyncResult result) {
            return base.Channel.EndGetNestResourcesList(result);
        }
        
        private System.IAsyncResult OnBeginGetNestResourcesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetNestResourcesList(db, callback, asyncState);
        }
        
        private object[] OnEndGetNestResourcesList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = this.EndGetNestResourcesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNestResourcesListCompleted(object state) {
            if ((this.GetNestResourcesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNestResourcesListCompleted(this, new GetNestResourcesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNestResourcesListAsync(string db) {
            this.GetNestResourcesListAsync(db, null);
        }
        
        public void GetNestResourcesListAsync(string db, object userState) {
            if ((this.onBeginGetNestResourcesListDelegate == null)) {
                this.onBeginGetNestResourcesListDelegate = new BeginOperationDelegate(this.OnBeginGetNestResourcesList);
            }
            if ((this.onEndGetNestResourcesListDelegate == null)) {
                this.onEndGetNestResourcesListDelegate = new EndOperationDelegate(this.OnEndGetNestResourcesList);
            }
            if ((this.onGetNestResourcesListCompletedDelegate == null)) {
                this.onGetNestResourcesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNestResourcesListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNestResourcesListDelegate, new object[] {
                        db}, this.onEndGetNestResourcesListDelegate, this.onGetNestResourcesListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> GetNestPostsList(string db) {
            return base.Channel.GetNestPostsList(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNestPostsList(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNestPostsList(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<string> EndGetNestPostsList(System.IAsyncResult result) {
            return base.Channel.EndGetNestPostsList(result);
        }
        
        private System.IAsyncResult OnBeginGetNestPostsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetNestPostsList(db, callback, asyncState);
        }
        
        private object[] OnEndGetNestPostsList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = this.EndGetNestPostsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNestPostsListCompleted(object state) {
            if ((this.GetNestPostsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNestPostsListCompleted(this, new GetNestPostsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNestPostsListAsync(string db) {
            this.GetNestPostsListAsync(db, null);
        }
        
        public void GetNestPostsListAsync(string db, object userState) {
            if ((this.onBeginGetNestPostsListDelegate == null)) {
                this.onBeginGetNestPostsListDelegate = new BeginOperationDelegate(this.OnBeginGetNestPostsList);
            }
            if ((this.onEndGetNestPostsListDelegate == null)) {
                this.onEndGetNestPostsListDelegate = new EndOperationDelegate(this.OnEndGetNestPostsList);
            }
            if ((this.onGetNestPostsListCompletedDelegate == null)) {
                this.onGetNestPostsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNestPostsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNestPostsListDelegate, new object[] {
                        db}, this.onEndGetNestPostsListDelegate, this.onGetNestPostsListCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> GetCategoryListAll(string db) {
            return base.Channel.GetCategoryListAll(db);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCategoryListAll(string db, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoryListAll(db, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<string> EndGetCategoryListAll(System.IAsyncResult result) {
            return base.Channel.EndGetCategoryListAll(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoryListAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            return this.BeginGetCategoryListAll(db, callback, asyncState);
        }
        
        private object[] OnEndGetCategoryListAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = this.EndGetCategoryListAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryListAllCompleted(object state) {
            if ((this.GetCategoryListAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryListAllCompleted(this, new GetCategoryListAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryListAllAsync(string db) {
            this.GetCategoryListAllAsync(db, null);
        }
        
        public void GetCategoryListAllAsync(string db, object userState) {
            if ((this.onBeginGetCategoryListAllDelegate == null)) {
                this.onBeginGetCategoryListAllDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryListAll);
            }
            if ((this.onEndGetCategoryListAllDelegate == null)) {
                this.onEndGetCategoryListAllDelegate = new EndOperationDelegate(this.OnEndGetCategoryListAll);
            }
            if ((this.onGetCategoryListAllCompletedDelegate == null)) {
                this.onGetCategoryListAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryListAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryListAllDelegate, new object[] {
                        db}, this.onEndGetCategoryListAllDelegate, this.onGetCategoryListAllCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> GetDestinationListByOrg(string db, int requestedOrg) {
            return base.Channel.GetDestinationListByOrg(db, requestedOrg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDestinationListByOrg(string db, int requestedOrg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDestinationListByOrg(db, requestedOrg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<string> EndGetDestinationListByOrg(System.IAsyncResult result) {
            return base.Channel.EndGetDestinationListByOrg(result);
        }
        
        private System.IAsyncResult OnBeginGetDestinationListByOrg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string db = ((string)(inValues[0]));
            int requestedOrg = ((int)(inValues[1]));
            return this.BeginGetDestinationListByOrg(db, requestedOrg, callback, asyncState);
        }
        
        private object[] OnEndGetDestinationListByOrg(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = this.EndGetDestinationListByOrg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDestinationListByOrgCompleted(object state) {
            if ((this.GetDestinationListByOrgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDestinationListByOrgCompleted(this, new GetDestinationListByOrgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDestinationListByOrgAsync(string db, int requestedOrg) {
            this.GetDestinationListByOrgAsync(db, requestedOrg, null);
        }
        
        public void GetDestinationListByOrgAsync(string db, int requestedOrg, object userState) {
            if ((this.onBeginGetDestinationListByOrgDelegate == null)) {
                this.onBeginGetDestinationListByOrgDelegate = new BeginOperationDelegate(this.OnBeginGetDestinationListByOrg);
            }
            if ((this.onEndGetDestinationListByOrgDelegate == null)) {
                this.onEndGetDestinationListByOrgDelegate = new EndOperationDelegate(this.OnEndGetDestinationListByOrg);
            }
            if ((this.onGetDestinationListByOrgCompletedDelegate == null)) {
                this.onGetDestinationListByOrgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDestinationListByOrgCompleted);
            }
            base.InvokeAsync(this.onBeginGetDestinationListByOrgDelegate, new object[] {
                        db,
                        requestedOrg}, this.onEndGetDestinationListByOrgDelegate, this.onGetDestinationListByOrgCompletedDelegate, userState);
        }
    }
}
