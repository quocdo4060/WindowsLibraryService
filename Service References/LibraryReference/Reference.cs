//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Powell.Mfg.LibraryWinService.LibraryReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryRequest", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class LibraryRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARENTPARTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VARIANTFLAGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryReference.WorkCenter> WORKCENTERSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIALCODE {
            get {
                return this.MATERIALCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALCODEField, value) != true)) {
                    this.MATERIALCODEField = value;
                    this.RaisePropertyChanged("MATERIALCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARENTPART {
            get {
                return this.PARENTPARTField;
            }
            set {
                if ((object.ReferenceEquals(this.PARENTPARTField, value) != true)) {
                    this.PARENTPARTField = value;
                    this.RaisePropertyChanged("PARENTPART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNUMBER {
            get {
                return this.PARTNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNUMBERField, value) != true)) {
                    this.PARTNUMBERField = value;
                    this.RaisePropertyChanged("PARTNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VARIANTFLAG {
            get {
                return this.VARIANTFLAGField;
            }
            set {
                if ((object.ReferenceEquals(this.VARIANTFLAGField, value) != true)) {
                    this.VARIANTFLAGField = value;
                    this.RaisePropertyChanged("VARIANTFLAG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryReference.WorkCenter> WORKCENTERS {
            get {
                return this.WORKCENTERSField;
            }
            set {
                if ((object.ReferenceEquals(this.WORKCENTERSField, value) != true)) {
                    this.WORKCENTERSField = value;
                    this.RaisePropertyChanged("WORKCENTERS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkCenter", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class WorkCenter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueRecord", Namespace="http://schemas.datacontract.org/2004/07/Powell.MFGSVC.LibraryService")]
    [System.SerializableAttribute()]
    public partial class QueueRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ACTIONNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADDED_BYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ADD_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BASEPARTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FINISH_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LIBRARYPATHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MATERIALCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ORGCODEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ORGIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PARTNUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PRIORITYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RESULT_STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime START_DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string STATUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VERSIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WORKCENTERField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACTIONNAME {
            get {
                return this.ACTIONNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ACTIONNAMEField, value) != true)) {
                    this.ACTIONNAMEField = value;
                    this.RaisePropertyChanged("ACTIONNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADDED_BY {
            get {
                return this.ADDED_BYField;
            }
            set {
                if ((object.ReferenceEquals(this.ADDED_BYField, value) != true)) {
                    this.ADDED_BYField = value;
                    this.RaisePropertyChanged("ADDED_BY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ADD_DATE {
            get {
                return this.ADD_DATEField;
            }
            set {
                if ((this.ADD_DATEField.Equals(value) != true)) {
                    this.ADD_DATEField = value;
                    this.RaisePropertyChanged("ADD_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BASEPART {
            get {
                return this.BASEPARTField;
            }
            set {
                if ((object.ReferenceEquals(this.BASEPARTField, value) != true)) {
                    this.BASEPARTField = value;
                    this.RaisePropertyChanged("BASEPART");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FINISH_DATE {
            get {
                return this.FINISH_DATEField;
            }
            set {
                if ((this.FINISH_DATEField.Equals(value) != true)) {
                    this.FINISH_DATEField = value;
                    this.RaisePropertyChanged("FINISH_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LIBRARYPATH {
            get {
                return this.LIBRARYPATHField;
            }
            set {
                if ((object.ReferenceEquals(this.LIBRARYPATHField, value) != true)) {
                    this.LIBRARYPATHField = value;
                    this.RaisePropertyChanged("LIBRARYPATH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MATERIALCODE {
            get {
                return this.MATERIALCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.MATERIALCODEField, value) != true)) {
                    this.MATERIALCODEField = value;
                    this.RaisePropertyChanged("MATERIALCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORGCODE {
            get {
                return this.ORGCODEField;
            }
            set {
                if ((object.ReferenceEquals(this.ORGCODEField, value) != true)) {
                    this.ORGCODEField = value;
                    this.RaisePropertyChanged("ORGCODE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ORGID {
            get {
                return this.ORGIDField;
            }
            set {
                if ((this.ORGIDField.Equals(value) != true)) {
                    this.ORGIDField = value;
                    this.RaisePropertyChanged("ORGID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PARTNUMBER {
            get {
                return this.PARTNUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.PARTNUMBERField, value) != true)) {
                    this.PARTNUMBERField = value;
                    this.RaisePropertyChanged("PARTNUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POST {
            get {
                return this.POSTField;
            }
            set {
                if ((object.ReferenceEquals(this.POSTField, value) != true)) {
                    this.POSTField = value;
                    this.RaisePropertyChanged("POST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PRIORITY {
            get {
                return this.PRIORITYField;
            }
            set {
                if ((this.PRIORITYField.Equals(value) != true)) {
                    this.PRIORITYField = value;
                    this.RaisePropertyChanged("PRIORITY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RESULT_STATUS {
            get {
                return this.RESULT_STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.RESULT_STATUSField, value) != true)) {
                    this.RESULT_STATUSField = value;
                    this.RaisePropertyChanged("RESULT_STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime START_DATE {
            get {
                return this.START_DATEField;
            }
            set {
                if ((this.START_DATEField.Equals(value) != true)) {
                    this.START_DATEField = value;
                    this.RaisePropertyChanged("START_DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string STATUS {
            get {
                return this.STATUSField;
            }
            set {
                if ((object.ReferenceEquals(this.STATUSField, value) != true)) {
                    this.STATUSField = value;
                    this.RaisePropertyChanged("STATUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VERSION {
            get {
                return this.VERSIONField;
            }
            set {
                if ((object.ReferenceEquals(this.VERSIONField, value) != true)) {
                    this.VERSIONField = value;
                    this.RaisePropertyChanged("VERSION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WORKCENTER {
            get {
                return this.WORKCENTERField;
            }
            set {
                if ((object.ReferenceEquals(this.WORKCENTERField, value) != true)) {
                    this.WORKCENTERField = value;
                    this.RaisePropertyChanged("WORKCENTER");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryReference.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ProcessLibraryRequest", ReplyAction="http://tempuri.org/ILibraryService/ProcessLibraryRequestResponse")]
        string ProcessLibraryRequest(Powell.Mfg.LibraryWinService.LibraryReference.LibraryRequest theLibReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ProcessLibraryRequest", ReplyAction="http://tempuri.org/ILibraryService/ProcessLibraryRequestResponse")]
        System.Threading.Tasks.Task<string> ProcessLibraryRequestAsync(Powell.Mfg.LibraryWinService.LibraryReference.LibraryRequest theLibReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetQueueRecords", ReplyAction="http://tempuri.org/ILibraryService/GetQueueRecordsResponse")]
        System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord> GetQueueRecords(int orgid, string partnumber, string status, string workcenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetQueueRecords", ReplyAction="http://tempuri.org/ILibraryService/GetQueueRecordsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord>> GetQueueRecordsAsync(int orgid, string partnumber, string status, string workcenter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/FinishQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/FinishQueueRecordResponse")]
        string FinishQueueRecord(int recordid, string resultStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/FinishQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/FinishQueueRecordResponse")]
        System.Threading.Tasks.Task<string> FinishQueueRecordAsync(int recordid, string resultStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StartQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/StartQueueRecordResponse")]
        string StartQueueRecord(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/StartQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/StartQueueRecordResponse")]
        System.Threading.Tasks.Task<string> StartQueueRecordAsync(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ResetQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/ResetQueueRecordResponse")]
        string ResetQueueRecord(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ResetQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/ResetQueueRecordResponse")]
        System.Threading.Tasks.Task<string> ResetQueueRecordAsync(int recordid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/InsertLibraryResult", ReplyAction="http://tempuri.org/ILibraryService/InsertLibraryResultResponse")]
        string InsertLibraryResult(Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord qrec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/InsertLibraryResult", ReplyAction="http://tempuri.org/ILibraryService/InsertLibraryResultResponse")]
        System.Threading.Tasks.Task<string> InsertLibraryResultAsync(Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord qrec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetNextQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/GetNextQueueRecordResponse")]
        Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord GetNextQueueRecord(string Resource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetNextQueueRecord", ReplyAction="http://tempuri.org/ILibraryService/GetNextQueueRecordResponse")]
        System.Threading.Tasks.Task<Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord> GetNextQueueRecordAsync(string Resource);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : Powell.Mfg.LibraryWinService.LibraryReference.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<Powell.Mfg.LibraryWinService.LibraryReference.ILibraryService>, Powell.Mfg.LibraryWinService.LibraryReference.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ProcessLibraryRequest(Powell.Mfg.LibraryWinService.LibraryReference.LibraryRequest theLibReq) {
            return base.Channel.ProcessLibraryRequest(theLibReq);
        }
        
        public System.Threading.Tasks.Task<string> ProcessLibraryRequestAsync(Powell.Mfg.LibraryWinService.LibraryReference.LibraryRequest theLibReq) {
            return base.Channel.ProcessLibraryRequestAsync(theLibReq);
        }
        
        public System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord> GetQueueRecords(int orgid, string partnumber, string status, string workcenter) {
            return base.Channel.GetQueueRecords(orgid, partnumber, status, workcenter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord>> GetQueueRecordsAsync(int orgid, string partnumber, string status, string workcenter) {
            return base.Channel.GetQueueRecordsAsync(orgid, partnumber, status, workcenter);
        }
        
        public string FinishQueueRecord(int recordid, string resultStatus) {
            return base.Channel.FinishQueueRecord(recordid, resultStatus);
        }
        
        public System.Threading.Tasks.Task<string> FinishQueueRecordAsync(int recordid, string resultStatus) {
            return base.Channel.FinishQueueRecordAsync(recordid, resultStatus);
        }
        
        public string StartQueueRecord(int recordid) {
            return base.Channel.StartQueueRecord(recordid);
        }
        
        public System.Threading.Tasks.Task<string> StartQueueRecordAsync(int recordid) {
            return base.Channel.StartQueueRecordAsync(recordid);
        }
        
        public string ResetQueueRecord(int recordid) {
            return base.Channel.ResetQueueRecord(recordid);
        }
        
        public System.Threading.Tasks.Task<string> ResetQueueRecordAsync(int recordid) {
            return base.Channel.ResetQueueRecordAsync(recordid);
        }
        
        public string InsertLibraryResult(Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord qrec) {
            return base.Channel.InsertLibraryResult(qrec);
        }
        
        public System.Threading.Tasks.Task<string> InsertLibraryResultAsync(Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord qrec) {
            return base.Channel.InsertLibraryResultAsync(qrec);
        }
        
        public Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord GetNextQueueRecord(string Resource) {
            return base.Channel.GetNextQueueRecord(Resource);
        }
        
        public System.Threading.Tasks.Task<Powell.Mfg.LibraryWinService.LibraryReference.QueueRecord> GetNextQueueRecordAsync(string Resource) {
            return base.Channel.GetNextQueueRecordAsync(Resource);
        }
    }
}
